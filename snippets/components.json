[
  {
    "name": "audio",
    "desc": ["音频。"],
    "attrs": [
      {
        "name": "id",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["audio 组件的唯一标识符"],
        "enum": []
      },
      {
        "name": "src",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["要播放音频的资源地址"],
        "enum": []
      },
      {
        "name": "loop",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否循环播放"],
        "enum": []
      },
      {
        "name": "controls",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否显示默认控件"],
        "enum": []
      },
      {
        "name": "poster",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "默认控件上的音频封面的图片资源地址，如果 controls 属性值为 false 则设置 poster 无效"
        ],
        "enum": []
      },
      {
        "name": "name",
        "type": { "name": "String" },
        "defaultValue": "未知音频",
        "desc": [
          "默认控件上的音频名字，如果 controls 属性值为 false 则设置 name 无效"
        ],
        "enum": []
      },
      {
        "name": "author",
        "type": { "name": "String" },
        "defaultValue": "未知作者",
        "desc": [
          "默认控件上的作者名字，如果 controls 属性值为 false 则设置 author 无效"
        ],
        "enum": []
      },
      {
        "name": "error",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "当发生错误时触发 error 事件，detail = {errMsg: MediaError.code}"
        ],
        "enum": []
      },
      {
        "name": "play",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["当开始/继续播放时触发play事件"],
        "enum": []
      },
      {
        "name": "pause",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["当暂停播放时触发 pause 事件"],
        "enum": []
      },
      {
        "name": "timeupdate",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "当播放进度改变时触发 timeupdate 事件，detail = {currentTime, duration}"
        ],
        "enum": []
      },
      {
        "name": "ended",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["当播放到末尾时触发 ended 事件"],
        "enum": []
      }
    ],
    "tips": []
  },
  {
    "name": "Barcode",
    "desc": ["app端nvue专用的扫码组件。"],
    "attrs": [
      {
        "name": "autostart",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["否"],
        "since": "是否自动开始扫码",
        "enum": []
      },
      {
        "name": "background",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "条码识别控件背景颜色,颜色值支持(参考CSS颜色规范)：颜色名称(参考CSS Color Names)/十六进制值/rgb值，默认值为黑色。",
        "enum": []
      },
      {
        "name": "frameColor",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "扫码框颜色,颜色值支持(参考CSS颜色规范)：颜色名称(参考CSS Color Names)/十六进制值/rgb值/rgba值，默认值为红色。",
        "enum": []
      },
      {
        "name": "scanbarColor",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "扫码条颜色,颜色值支持(参考CSS颜色规范)：颜色名称(参考CSS Color Names)/十六进制值/rgb值/rgba值，默认值为红色。",
        "enum": []
      },
      {
        "name": "filters",
        "type": { "name": "Array[Number]" },
        "defaultValue": "[0,1,2]",
        "desc": ["否"],
        "since": "条码类型过滤器，条码类型常量数组，默认情况支持QR、EAN13、EAN8类型。 通过此参数可设置扫码识别支持的条码类型（注意：设置支持的条码类型越多，扫描识别速度可能将会降低）。",
        "enum": []
      },
      {
        "name": "conserve",
        "type": { "name": "是否保存扫码成功时的截图" },
        "defaultValue": "Boolean",
        "desc": ["否"],
        "since": "如果设置为true则在扫码成功时将图片保存，并通过onmarked回调函数的file参数返回保存文件的路径。 默认值为false，不保存截图。",
        "enum": []
      },
      {
        "name": "filename",
        "type": { "name": "保存扫码成功时图片保存路径" },
        "defaultValue": "String",
        "desc": ["否"],
        "since": "可通过此参数设置保存截图的路径和名称，如果设置图片文件名称则必须指定文件的后缀名（必须是.png），否则认为是指定目录，文件名称则自动生成。",
        "enum": []
      },
      {
        "name": "vibrate",
        "type": { "name": "扫码成功时是否需要震动提醒" },
        "defaultValue": "Boolean",
        "desc": ["否"],
        "since": "如果设置为true则在扫码成功时震动设备，false则不震动。 默认值为true。",
        "enum": []
      },
      {
        "name": "sound",
        "type": { "name": "扫码成功时播放的提示音" },
        "defaultValue": "String",
        "desc": ["否"],
        "since": "可取值： \"none\" - 不播放提示音； \"default\" - 播放默认提示音（5+引擎内置）。 默认值为\"default\"。",
        "enum": []
      }
    ],
    "tips": [
      "此组件用于app端nvue页面实现内嵌到界面上的扫码。其他场景、其他平台，请使用全屏扫码API：[uni.scanCode](https://uniapp.dcloud.io/api/system/barcode) ",
      "App下纯nvue项目（manifest中renderer为native），暂不支持uni.scanCode API，此时只能使用barcode组件来替代。",
      "此组件自HBuilderX 2.1.5+起支持。",
      "QR: QR二维码，数值为0",
      "EAN13: EAN条形码标准版，数值为1",
      "EAN8: ENA条形码简版，数值为2",
      "AZTEC: Aztec二维码，数值为3",
      "DATAMATRIX: Data Matrix二维码，数值为4",
      "UPCA: UPC条形码标准版，数值为5",
      "UPCE: UPC条形码缩短版，数值为6",
      "CODABAR: Codabar条形码，数值为7",
      "CODE39: Code39条形码，数值为8",
      "CODE93: Code93条形码，数值为9",
      "CODE128: Code128条形码，数值为10",
      "ITF: ITF条形码，数值为11",
      "MAXICODE: MaxiCode二维码，数值为12",
      "PDF417: PDF 417二维条码，数值为13",
      "RSS14: RSS 14条形组合码，数值为14",
      "RSSEXPANDED: 扩展式RSS条形组合码，数值为15"
    ]
  },
  {
    "name": "button",
    "desc": ["按钮。"],
    "attrs": [
      {
        "name": "size",
        "type": { "name": "String" },
        "defaultValue": "default",
        "desc": ["按钮的大小"],
        "since": "",
        "enum": [
          { "value": "default", "desc": "默认大小" },
          { "value": "mini", "desc": "小尺寸" }
        ]
      },
      {
        "name": "type",
        "type": { "name": "String" },
        "defaultValue": "default",
        "desc": ["按钮的样式类型"],
        "since": "",
        "enum": [
          {
            "value": "primary",
            "desc": "微信小程序、360小程序为绿色，App、H5、百度小程序、支付宝小程序、快应用为蓝色，字节跳动小程序为红色，QQ小程序为浅蓝色。如想在多端统一颜色，请改用default，然后自行写样式"
          },
          { "value": "default", "desc": "白色" },
          { "value": "warn", "desc": "红色" }
        ]
      },
      {
        "name": "plain",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["按钮是否镂空，背景色透明"],
        "since": "",
        "enum": []
      },
      {
        "name": "disabled",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否禁用"],
        "since": "",
        "enum": []
      },
      {
        "name": "loading",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["名称前是否带 loading 图标"],
        "since": "",
        "enum": []
      },
      {
        "name": "form-type",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "用于 ``<form>`` 组件，点击分别会触发 ``<form>`` 组件的 submit/reset 事件"
        ],
        "since": "",
        "enum": [
          { "value": "submit", "desc": "提交表单" },
          { "value": "reset", "desc": "重置表单" }
        ]
      },
      {
        "name": "open-type",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["开放能力"],
        "since": "",
        "enum": [
          {
            "value": "feedback",
            "desc": "打开“意见反馈”页面，用户可提交反馈内容并上传日志"
          },
          { "value": "share", "desc": "触发用户转发" },
          {
            "value": "getUserInfo",
            "desc": "获取用户信息，可以从@getuserinfo回调中获取到用户信息，包括头像、昵称等信息"
          },
          {
            "value": "contact",
            "desc": "打开客服会话，如果用户在会话中点击消息卡片后返回应用，可以从 @contact 回调中获得具体信息"
          },
          {
            "value": "getPhoneNumber",
            "desc": "获取用户手机号，可以从@getphonenumber回调中获取到用户信息"
          },
          {
            "value": "launchApp",
            "desc": "小程序中打开APP，可以通过app-parameter属性设定向APP传的参数"
          },
          { "value": "openSetting", "desc": "打开授权设置页" },
          { "value": "getAuthorize", "desc": "支持小程序授权" },
          { "value": "contactShare", "desc": "分享到通讯录好友" },
          { "value": "lifestyle", "desc": "关注生活号" },
          {
            "value": "openGroupProfile",
            "desc": "呼起QQ群资料卡页面，可以通过group-id属性设定需要打开的群资料卡的群号，同时manifest中必须配置groupIdList"
          }
        ]
      },
      {
        "name": "hover-class",
        "type": { "name": "String" },
        "defaultValue": "button-hover",
        "desc": [
          "指定按钮按下去的样式类。当 hover-class=\"none\" 时，没有点击态效果"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "hover-start-time",
        "type": { "name": "Number" },
        "defaultValue": "20",
        "desc": ["按住后多久出现点击态，单位毫秒"],
        "since": "",
        "enum": []
      },
      {
        "name": "hover-stay-time",
        "type": { "name": "Number" },
        "defaultValue": "70",
        "desc": ["手指松开后点击态保留时间，单位毫秒"],
        "since": "",
        "enum": []
      },
      {
        "name": "app-parameter",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["打开 APP 时，向 APP 传递的参数，open-type=launchApp时有效"],
        "since": "",
        "enum": []
      },
      {
        "name": "hover-stop-propagation",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["指定是否阻止本节点的祖先节点出现点击态"],
        "since": "",
        "enum": []
      },
      {
        "name": "lang",
        "type": { "name": "string" },
        "defaultValue": "'en'",
        "desc": [
          "指定返回用户信息的语言，zh_CN 简体中文，zh_TW 繁体中文，en 英文。"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "session-from",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["会话来源，open-type=\"contact\"时有效"],
        "since": "",
        "enum": []
      },
      {
        "name": "send-message-title",
        "type": { "name": "string" },
        "defaultValue": "当前标题",
        "desc": ["会话内消息卡片标题，open-type=\"contact\"时有效"],
        "since": "",
        "enum": []
      },
      {
        "name": "send-message-path",
        "type": { "name": "string" },
        "defaultValue": "当前分享路径",
        "desc": [
          "会话内消息卡片点击跳转小程序路径，open-type=\"contact\"时有效"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "send-message-img",
        "type": { "name": "string" },
        "defaultValue": "截图",
        "desc": ["会话内消息卡片图片，open-type=\"contact\"时有效"],
        "since": "",
        "enum": []
      },
      {
        "name": "show-message-card",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": [
          "是否显示会话内消息卡片，设置此参数为 true，用户进入客服会话会在右下角显示\"可能要发送的小程序\"提示，用户点击后可以快速发送小程序消息，open-type=\"contact\"时有效"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "getphonenumber",
        "type": { "name": "Handler" },
        "defaultValue": "",
        "desc": ["获取用户手机号回调"],
        "since": "open-type=\"getPhoneNumber\"",
        "enum": []
      },
      {
        "name": "getuserinfo",
        "type": { "name": "Handler" },
        "defaultValue": "",
        "desc": [
          "用户点击该按钮时，会返回获取到的用户信息，从返回参数的detail中获取到的值同uni.getUserInfo"
        ],
        "since": "open-type=\"getUserInfo\"",
        "enum": []
      },
      {
        "name": "error",
        "type": { "name": "Handler" },
        "defaultValue": "",
        "desc": ["当使用开放能力时，发生错误的回调"],
        "since": "open-type=\"launchApp\"",
        "enum": []
      },
      {
        "name": "opensetting",
        "type": { "name": "Handler" },
        "defaultValue": "",
        "desc": ["在打开授权设置页并关闭后回调"],
        "since": "open-type=\"openSetting\"",
        "enum": []
      },
      {
        "name": "launchapp",
        "type": { "name": "Handler" },
        "defaultValue": "",
        "desc": ["从小程序打开 App 成功的回调"],
        "since": "open-type=\"launchApp\"",
        "enum": []
      }
    ],
    "tips": [
      "**注1：``button-hover`` 默认为 ``{background-color: rgba(0, 0, 0, 0.1); opacity: 0.7;}``**",
      "```open-type=\"launchApp\"```时需要调起的APP接入微信OpenSDK[详见](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/launchApp.html)",
      "在小程序中，开发者可以登录 [微信小程序管理后台](https://mp.weixin.qq.com/) 、[QQ小程序后台](https://q.qq.com/#/)后，进入菜单“客服反馈”页面获取反馈内容。",
      "在 App 中，开发者登录 [DCloud开发者中心](https://dev.dcloud.net.cn/) 后点击应用名称，进入左侧菜单“用户反馈”页面获取反馈内容。",
      "点击 share 分享按钮时会触发 [onShareAppMessage](/api/plugins/share)",
      "支付宝小程序平台，获取用户手机号时，建议先通过条件编译的方式，调用支付宝原生API，[参考](https://docs.alipay.com/mini/api/getphonenumber)"
    ]
  },
  {
    "name": "camera",
    "desc": ["页面内嵌的区域相机组件。注意这不是点击后全屏打开的相机。"],
    "attrs": [
      {
        "name": "mode",
        "type": { "name": "String" },
        "defaultValue": "normal",
        "desc": ["有效值为 normal, scanCode"],
        "since": "微信小程序、QQ小程序、快应用",
        "enum": []
      },
      {
        "name": "resolution",
        "type": { "name": "string" },
        "defaultValue": "medium",
        "desc": ["分辨率，不支持动态修改"],
        "since": "微信小程序2.10.0",
        "enum": []
      },
      {
        "name": "device-position",
        "type": { "name": "String" },
        "defaultValue": "back",
        "desc": ["前置或后置摄像头，值为front, back"],
        "since": "",
        "enum": []
      },
      {
        "name": "flash",
        "type": { "name": "String" },
        "defaultValue": "auto",
        "desc": ["闪光灯，值为auto, on, off"],
        "since": "",
        "enum": []
      },
      {
        "name": "frame-size",
        "type": { "name": "string" },
        "defaultValue": "medium",
        "desc": ["指定期望的相机帧数据尺寸"],
        "since": "微信小程序2.7.0、快应用",
        "enum": []
      },
      {
        "name": "stop",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["摄像头在非正常终止时触发，如退出后台等情况"],
        "since": "",
        "enum": []
      },
      {
        "name": "error",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["用户不允许使用摄像头时触发"],
        "since": "",
        "enum": []
      },
      {
        "name": "initdone",
        "type": { "name": "eventhandle" },
        "defaultValue": "",
        "desc": ["相机初始化完成时触发，e.detail = {maxZoom}"],
        "since": "微信小程序2.7.0",
        "enum": []
      },
      {
        "name": "scancode",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["在扫码识别成功时触发，仅在 mode=\"scanCode\" 时生效"],
        "since": "微信小程序",
        "enum": []
      }
    ],
    "tips": [
      "在 App 和 H5 端，可以使用API方式来调用全屏摄像头，而不是组件内嵌方式，详见：[uni.chooseImage](/api/media/image?id=chooseimage) 和 [uni.chooseVideo](/api/media/video?id=choosevideo) * ",
      "如开发身份证扫描、银行卡识别等ocr识别需求，在微信小程序和百度小程序中使用本camera组件，将图片发送给服务器识别，插件市场有封装好的[模板](https://ext.dcloud.net.cn/search?q=%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9B%B8%E6%9C%BA)；在App端使用[原生插件](https://ext.dcloud.net.cn/search?q=ocr)",
      "活体检测、人脸识别另见文档[生物认证](/api/system/authentication)",
      "app-nvue下支持barcode组件，可实现自定义扫码。[参考](https://uniapp.dcloud.io/component/barcode)",
      "camera 组件是由客户端创建的原生组件，它的层级是最高的，不能通过 z-index 控制层级。可使用 cover-view cover-image 覆盖在上面。",
      "请勿在 scroll-view、swiper、picker-view、movable-view 中使用 camera 组件。",
      "同一页面只能插入一个 camera 组件。",
      "相关API：[createCameraContext](/api/media/camera-context)"
    ]
  },
  {
    "name": "canvas",
    "desc": ["画布。"],
    "attrs": [
      {
        "name": "type",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["指定 canvas 类型，支持 2d (2.9.0) 和 webgl"],
        "since": "微信小程序 2.7.0+ 字节小程序1.78.0+",
        "enum": []
      },
      {
        "name": "canvas-id",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["canvas 组件的唯一标识符"],
        "since": "",
        "enum": []
      },
      {
        "name": "disable-scroll",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": [
          "当在 canvas 中移动时且有绑定手势事件时，禁止屏幕滚动以及下拉刷新"
        ],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "touchstart",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["手指触摸动作开始"],
        "since": "字节小程序1.78.0+",
        "enum": []
      },
      {
        "name": "touchmove",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["手指触摸后移动"],
        "since": "字节小程序1.78.0+",
        "enum": []
      },
      {
        "name": "touchend",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["手指触摸动作结束"],
        "since": "字节小程序1.78.0+",
        "enum": []
      },
      {
        "name": "touchcancel",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["手指触摸动作被打断，如来电提醒，弹窗"],
        "since": "字节小程序1.78.0+",
        "enum": []
      },
      {
        "name": "longtap",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "手指长按 500ms 之后触发，触发了长按事件后进行移动不会触发屏幕的滚动"
        ],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "error",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "当发生错误时触发 error 事件，detail = {errMsg: 'something wrong'}"
        ],
        "since": "字节跳动小程序不支持",
        "enum": []
      }
    ],
    "tips": [
      "canvas 标签默认宽度 300px、高度 225px，动态修改 canvas 大小后需要重新绘制。",
      "h5、app-vue 中单个尺寸过大的 canvas 在 iOS/Safari 无法绘制（具体限制尺寸未公布）。",
      "同一页面中的 canvas-id 不可重复，如果使用一个已经出现过的 canvas-id，该 canvas 标签对应的画布将被隐藏并不再正常工作。",
      "canvas 在微信小程序、百度小程序、QQ小程序中为原生组件，层级高于前端组件，请勿内嵌在 scroll-view、swiper、picker-view、movable-view 中使用。解决 canvas 层级过高无法覆盖，参考 [native-component](/component/native-component)。其他小程序端的 canvas 仍然为 webview 中的 canvas。",
      "app-vue 中的 canvas 仍然是 webview 的 canvas。app-nvue下如需使用canvas，需下载插件，详见文档底部章节。",
      "app-vue的canvas虽然是webview自带的canvas，但却比nvue和微信小程序的原生canvas性能更高。注意并非原生=更快。canvas动画的流畅，关键不在于渲染引擎的速度，而在于减少从逻辑层向视图层频繁通信造成的折损。",
      "小程序、app-nvue，因为通信阻塞，难以绘制非常流畅的canvas动画。h5和app-vue不存在此问题。但注意，app-vue下若想流畅的绘制canvas动画，需要使用[renderjs](https://uniapp.dcloud.io/frame?id=renderjs)技术，把操作canvas的js逻辑放到视图层运行，避免逻辑层和视图层频繁通信。hello uni-app的canvas示例很典型，在相同手机运行该示例，可以看出在h5端和app端非常流畅，而小程序端由于没有renderjs技术，做不到这么流畅的动画。",
      "H5端流行的echart报表因为涉及大量dom操作，无法跨端使用，而wx-chart在跨端和更新方面都不足。如考虑小程序，推荐使用全端可用的[uChart](https://ext.dcloud.net.cn/plugin?id=271)。",
      "如只考虑H5端，也可以继续使用echart、f2等常规web图表。",
      "如不考虑小程序，那么App端和H5，也可以通过renderjs技术来使用echart、f2等web图表，功能性能比uchart更好。[什么是renderjs](https://uniapp.dcloud.io/frame?id=renderjs)、[基于renderjs使用echart的示例](https://ext.dcloud.net.cn/plugin?id=1207)"
    ]
  },
  {
    "name": "cell",
    "desc": [
      "app端nvue专用组件。它的重要价值在于告诉原生引擎，哪些部分是可重用的。"
    ],
    "attrs": [],
    "tips": [
      "insert-animation string, cell 的插入动画。当前只支持 `none` 和 `default`。",
      "delete-animation string, cell 的删除动画。当前只支持 `none` 和 `default`。",
      "recycle boolean, 默认值 true。这个属性控制这个 Cell 的 view 和子 views 是否在列表滚动时进行回收，在 iOS 上通常必须指定为 true （因为默认为 true，所以一般不需要写这个属性），如果设置为 false，列表滚动时，页面会占用非常高的内存。Android上默认是true，设置为false可以防止Image和Text上数据重新绑定。",
      "通用样式.",
      "通用事件."
    ]
  },
  {
    "name": "checkbox-group",
    "desc": ["多项选择器，内部由多个 checkbox 组成。"],
    "attrs": [
      {
        "name": "change",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "``<checkbox-group>``中选中项发生改变是触发 change 事件，detail = {value:[选中的checkbox的value的数组]}"
        ],
        "enum": []
      },
      {
        "name": "value",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "``<checkbox>`` 标识，选中时触发 ``<checkbox-group>`` 的 change 事件，并携带 ``<checkbox>`` 的 value。"
        ],
        "enum": []
      },
      {
        "name": "disabled",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否禁用"],
        "enum": []
      },
      {
        "name": "checked",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["当前是否选中，可用来设置默认选中"],
        "enum": []
      },
      {
        "name": "color",
        "type": { "name": "Color" },
        "defaultValue": "",
        "desc": ["checkbox的颜色，同css的color"],
        "enum": []
      }
    ],
    "tips": [
      "checkbox的默认颜色，在不同平台不一样。微信小程序、360小程序是绿色的，字节跳动小程序为红色，其他平台是蓝色的。更改颜色使用color属性。",
      "如需调节checkbox大小，可通过css的scale方法调节，如缩小到70%`style=\"transform:scale(0.7)\"`",
      "uni-ui提供了增强的uni-data-checkbox组件，基于[datacom规范](/component/datacom)，只需传入data数据，即可自动生成一组复选框，使用方式更简洁，并且支持[uni-forms](https://ext.dcloud.net.cn/plugin?id=2773)的表单验证。uni-data-checkbox组件详见[https://ext.dcloud.net.cn/plugin?id=3456](https://ext.dcloud.net.cn/plugin?id=3456)"
    ]
  },
  {
    "name": "cover-view",
    "desc": ["覆盖在原生组件上的文本视图。"],
    "attrs": [
      {
        "name": "scroll-top",
        "type": { "name": "number/string" },
        "defaultValue": "",
        "desc": [
          "设置顶部滚动偏移量，仅在设置了 overflow-y: scroll 成为滚动元素后生效"
        ],
        "since": "微信小程序2.1.0",
        "enum": []
      },
      {
        "name": "src",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["图标路径。支持本地路径、网络路径。不支持 base64 格式。"],
        "since": "",
        "enum": []
      },
      {
        "name": "load",
        "type": { "name": "eventhandle" },
        "defaultValue": "",
        "desc": ["图片加载成功时触发"],
        "since": "微信小程序 2.1.0",
        "enum": []
      },
      {
        "name": "error",
        "type": { "name": "eventhandle" },
        "defaultValue": "",
        "desc": ["图片加载失败时触发"],
        "since": "微信小程序 2.1.0",
        "enum": []
      }
    ],
    "tips": [
      "app-nvue所有组件均为原生渲染，不存在前端组件无法覆盖原生组件的问题。但为了保持多端兼容，nvue里也实现了`cover-view`，作用于普通`view`一样。",
      "微信小程序部分原生组件实现了同层渲染，在指定的基础库版本上，某些原生组件可无需使用`cover-view`覆盖，[详见](https://developers.weixin.qq.com/miniprogram/dev/component/native-component.html)",
      "字节跳动小程序不需要`cover-view`，因其原生组件均实现了同层渲染。",
      "360小程序不存在原生组件，无此概念",
      "position: fixed",
      "opacity",
      "overflow",
      "padding",
      "linebreak",
      "white-space",
      "App端vue页面 `cover-view`、`cover-image` 中不支持嵌套其它组件，包括再次嵌套`cover-view`，仅可覆盖`video`、`map`。App端nvue页面自2.1.5起没有这些限制。",
      "App端 `cover-image` 使用本地图像的话，打包前需要设置资源为释放模式，在manifest文件内app-plus新增runmode节点，设置值为liberate。",
      "App端还可以使用plus.nativeObj.view绘制原生内容，参考:[uni-app中使用5+界面控件](https://ask.dcloud.net.cn/article/35036)、[plus.nativeObj.view规范](https://www.html5plus.org/doc/zh_cn/nativeobj.html#plus.nativeObj.View)",
      "App端还提供了更灵活和强大的`subNvue`，参考[原生子窗体subNvue](/api/window/subNVues)",
      "在 video 组件中使用时，若想在全屏模式下使用`cover-view`，只有在微信小程序、App端的nvue页面可实现。",
      "在App端，如果重度使用video和map，推荐使用nvue页面。",
      "百度小程序iOS端暂不支持一个页面有多个video时嵌套cover-view。",
      "支付宝小程序中 `cover-view` 不支持嵌套。",
      "cover-view和cover-image的aria-role仅可设置为button，读屏模式下才可以点击，并朗读出“按钮”；为空时可以聚焦，但不可点击",
      "基础库 2.2.4 起支持 touch 相关事件，也可使用 hover-class 设置点击态",
      "基础库 2.1.0 起支持设置 scale rotate 的 css 样式，包括 transition 动画",
      "基础库 1.9.90 起 cover-view 支持 overflow: scroll，但不支持动态更新 overflow",
      "基础库 1.9.90 起最外层 cover-view 支持 position: fixed",
      "基础库 1.9.0 起支持插在 view 等标签下。在此之前只可嵌套在原生组件map、video、canvas、camera内，避免嵌套在其他组件内。",
      "基础库 1.6.0 起支持css transition动画，transition-property只支持transform (translateX, translateY)与opacity。",
      "基础库 1.6.0 起支持css opacity。",
      "事件模型遵循冒泡模型，但不会冒泡到原生组件。",
      "文本建议都套上cover-view标签，避免排版错误。",
      "只支持基本的定位、布局、文本样式。不支持设置单边的border、background-image、shadow、overflow: visible等。",
      "建议子节点不要溢出父节点",
      "支持使用 z-index 控制层级",
      "默认设置的样式有：white-space: nowrap; line-height: 1.2; display: block;",
      "自定义组件嵌套 cover-view 时，自定义组件的 slot 及其父节点暂不支持通过 wx:if 控制显隐，否则会导致 cover-view 不显示"
    ]
  },
  {
    "name": "custom-tab-bar",
    "desc": ["自定义tabBar组件。"],
    "attrs": [
      {
        "name": "direction",
        "type": { "name": "String" },
        "defaultValue": "horizontal",
        "desc": ["选项的排列方向 可选值：horizontal，vertical"],
        "enum": []
      },
      {
        "name": "show-icon",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否显示icon"],
        "enum": []
      },
      {
        "name": "selected",
        "type": { "name": "Number" },
        "defaultValue": "0",
        "desc": ["选中的tabBar选项索引值"],
        "enum": []
      },
      {
        "name": "onTabItemTap",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["点击事件，参数为Object，具体见下表"],
        "enum": []
      },
      {
        "name": "index",
        "type": { "name": "String" },
        "defaultValue": "被点击tabItem的序号，从0开始",
        "desc": [null],
        "enum": []
      },
      {
        "name": "pagePath",
        "type": { "name": "String" },
        "defaultValue": "被点击tabItem的页面路径",
        "desc": [null],
        "enum": []
      },
      {
        "name": "text",
        "type": { "name": "String" },
        "defaultValue": "被点击tabItem的按钮文字",
        "desc": [null],
        "enum": []
      }
    ],
    "tips": []
  },
  {
    "name": "什么是datacom",
    "desc": ["`datacom`，全称是`data components`，数据驱动的组件。"],
    "attrs": [
      {
        "name": "step-search",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": [
          "是否分步查询云端数据。常用于树，picker，分页列表等，参考：`uni-data-picker`"
        ],
        "enum": []
      },
      {
        "name": "step-search-url",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "分步查询的云端数据请求地址。常用于树，picker，分页列表等，参考：`uni-data-picker`"
        ],
        "enum": []
      },
      {
        "name": "self-field",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "\"树\"结构的当前字段名称。常用于树，picker，参考：`uni-data-picker`"
        ],
        "enum": []
      },
      {
        "name": "parent-field",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "\"树\"结构的父字段名称。常用于树，picker，参考：`uni-data-picker`"
        ],
        "enum": []
      },
      {
        "name": "stepsearch",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "分步查询数据时触发。可用于自定义分步查询数据，参考：`uni-data-picker`"
        ],
        "enum": []
      },
      {
        "name": "preload",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否预加载云端数据。参考：`uni-data-picker`"],
        "enum": []
      },
      {
        "name": "popupopened",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["组件弹出显示时触发。参考：`uni-data-picker`"],
        "enum": []
      },
      {
        "name": "popupclosed",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["组件弹出关闭时触发。参考：`uni-data-picker`"],
        "enum": []
      },
      {
        "name": "localdata",
        "type": { "name": "Array" },
        "defaultValue": "",
        "desc": [
          "本地数据，[详情](https://uniapp.dcloud.net.cn/component/datacom)"
        ],
        "enum": []
      },
      {
        "name": "collection",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["表名。支持输入多个表名，用 `,` 分割"],
        "enum": []
      },
      {
        "name": "field",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["查询字段，多个字段用 `,` 分割"],
        "enum": []
      },
      {
        "name": "where",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "查询条件，内容较多，另见jql文档：[详情](https://uniapp.dcloud.net.cn/uniCloud/uni-clientDB?id=jsquery)"
        ],
        "enum": []
      },
      {
        "name": "orderby",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["排序字段及正序倒叙设置"],
        "enum": []
      },
      {
        "name": "groupby",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["对数据进行分组"],
        "enum": []
      },
      {
        "name": "group-field",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["对数据进行分组统计"],
        "enum": []
      },
      {
        "name": "distinct",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否对数据查询结果中重复的记录进行去重"],
        "enum": []
      },
      {
        "name": "action",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": [
          "云端执行数据库查询的前或后，触发某个action函数操作，进行预处理或后处理，[详情](https://uniapp.dcloud.net.cn/uniCloud/uni-clientDB?id=%e4%ba%91%e7%ab%af%e9%83%a8%e5%88%86)。场景：前端无权操作的数据，比如阅读数+1"
        ],
        "enum": []
      },
      {
        "name": "page-data",
        "type": { "name": "String" },
        "defaultValue": "add",
        "desc": [
          "分页策略选择。值为 `add` 代表下一页的数据追加到之前的数据中，常用于滚动到底加载下一页；值为 `replace` 时则替换当前data数据，常用于PC式交互，列表底部有页码分页按钮"
        ],
        "enum": []
      },
      {
        "name": "page-current",
        "type": { "name": "Number" },
        "defaultValue": "0",
        "desc": ["当前页"],
        "enum": []
      },
      {
        "name": "page-size",
        "type": { "name": "Number" },
        "defaultValue": "10",
        "desc": ["每页数据数量"],
        "enum": []
      },
      {
        "name": "getcount",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": [
          "是否查询总数据条数，默认 `false`，需要分页模式时指定为 `true`"
        ],
        "enum": []
      },
      {
        "name": "getone",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": [
          "指定查询结果是否仅返回数组第一条数据，默认 false。在false情况下返回的是数组，即便只有一条结果，也需要[0]的方式获取。在值为 true 时，直接返回结果数据，少一层数组。一般用于非列表页，比如详情页"
        ],
        "enum": []
      },
      {
        "name": "gettree",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否查询树状数据，默认 `false`"],
        "enum": []
      },
      {
        "name": "startwith",
        "type": { "name": "String" },
        "defaultValue": "''",
        "desc": [
          "`gettree`的第一层级条件，此初始条件可以省略，不传startWith时默认从最顶级开始查询"
        ],
        "enum": []
      },
      {
        "name": "limitlevel",
        "type": { "name": "Number" },
        "defaultValue": "10",
        "desc": [
          "`gettree`查询返回的树的最大层级。超过设定层级的节点不会返回。默认10级，最大15，最小1"
        ],
        "enum": []
      },
      {
        "name": "foreign-key",
        "type": { "name": "String" },
        "defaultValue": "''",
        "desc": [
          "手动指定使用的关联关系，HBuilderX 3.1.10+ [详情](/uniCloud/clientdb?id=lookup-foreign-key)"
        ],
        "enum": []
      },
      {
        "name": "mixinDatacomLoading",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["加载数据状态"],
        "enum": []
      },
      {
        "name": "mixinDatacomHasMore",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否有更多数据"],
        "enum": []
      },
      {
        "name": "mixinDatacomResData",
        "type": { "name": "Array" },
        "defaultValue": "[]",
        "desc": ["查询返回的数据"],
        "enum": []
      },
      {
        "name": "mixinDatacomErrorMessage",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["错误消息"],
        "enum": []
      },
      {
        "name": "mixinDatacomPage",
        "type": { "name": "OBject" },
        "defaultValue": "",
        "desc": ["分页信息"],
        "enum": []
      }
    ],
    "tips": [
      "更少的代码量。从前述的传统写法对比可见，使用datacom的前端页面，代码量可减少一半以上。",
      "设计更加清晰。服务器端给符合规范的数据，然后接受选择的结果数据。中间的ui交互无需关心。",
      "结合 [uni-forms](https://ext.dcloud.net.cn/plugin?id=2773) 组件，自动实现表单校验。",
      "搭配 uniCloud 的[unicloud-db组件](https://uniapp.dcloud.io/uniCloud/clientdb)，数据库查询结果直接绑定给`datacom组件`，服务器代码直接就不用写了",
      "搭配 uniCloud 的[schema2code页面生成系统](https://uniapp.dcloud.net.cn/uniCloud/schema?id=autocode)，数据库定义好schema，前端页面就不用写了，自动生成",
      "互操作性。可以轻易的切换更好的组件",
      "首先在uniCloud的数据库里，建一个城市表。",
      "然后前端写一个组件`<xx-data-citypicker>`",
      "最后用`unicloud-db组件`把数据库的城市表数据拉下来，绑定给`<xx-data-citypicker>`",
      "在传统开发里，这个功能要写很长的代码，现在变得特别轻松。",
      "额外的，开发者将可以在插件市场找到多个城市选择组件，它们都符合`datacom组件规范`，可能有的是全屏选择、有的是底部半屏选择，有的顶部有搜索框、有的右侧有索引字母....不管什么样的城市选择组件，你都可以随便的换，反正它们都符合一个数据规范。",
      "命名以 -data- 为中间分隔符，前面为组件库名称，后面是组件功能表达",
      "组件可以通过属性赋值，绑定一个 data 数据。可以是本地的localdata，也可以直接指定uniCloud云数据库的查询结果。详见下文的《数据绑定规范》",
      "data数据是一组候选json数据。数据可以是平铺的数组，也可以是嵌套的树形结构。详见下文的《数据结构规范》",
      "符合 `<uni-forms>` 组件的表单校验规范",
      "数组类型数据：",
      "规范：",
      "数据示例：\n```json\n[\n{\"value\": \"bj\",\"text\": \"北京\"},\n{\"value\": \"sh\",\"text\": \"上海\"}\n]\n```",
      "组件示例：[uni-data-checkbox](https://ext.dcloud.net.cn/plugin?id=3456)",
      "使用示例：\n```html\n  <template>\n      <!-- 传入符合 datacom 规范的数据，即可渲染出一组 checkbox -->\n      <!-- 使用 v-model 双向绑定 checkbox 的选中值 -->\n      <uni-data-checkbox v-model=\"value\" :localdata=\"options\" multiple></uni-data-checkbox>\n  </template>\n  <script>\n    export default {\n      data() {\n        return {\n          value: ['bj'],\n          options: [\n            { value: \"bj\", text: \"北京\" },\n            { value: \"sh\", text: \"上海\" },\n          ],\n        };\n      },\n    };\n  </script>\n```",
      "树类型数据：",
      "规范：",
      "数据示例：\n```json\n[{\n\"value\": \"110000\",\n\"text\": \"北京市\",\n\"children\": [{\n  \"value\": \"110105\",\n  \"text\": \"朝阳区\"\n}, {\n  \"value\": \"110108\",\n  \"text\": \"海淀区\"\n}]\n}]\n```",
      "组件示例：[uni-data-picker](https://ext.dcloud.net.cn/plugin?id=3796)",
      "使用示例：\n```html\n  <template>\n    <!-- 传入符合 datacom 规范的数据，即可渲染出一个选择器  -->\n    <!-- 使用 v-model 双向绑定 picker 的选中值 -->\n    <uni-data-picker v-model=\"value\" :localdata=\"items\"></uni-data-checkbox>\n  </template>\n  <script>\n    export default {\n      data() {\n        return {\n          value: [\"110000\",\"110105\"],\n          items: [{\n              \"value\": \"110000\",\n              \"text\": \"北京市\",\n              \"children\": [{\n                  \"value\": \"110105\",\n                  \"text\": \"朝阳区\"\n              }, {\n                  \"value\": \"110108\",\n                  \"text\": \"海淀区\"\n              }]\n          }],\n        };\n      },\n    };\n  </script>\n```",
      "树组件：点击父节点时，动态加载该父节点的子节点",
      "列表组件：点击下一页，动态加载下一页数据",
      "与基础代码相比，datacom用起来简单，但封装一层后导致其灵活性不如基础组件。如有个性化逻辑则有可能需要改组件源码。",
      "datacom覆盖范围主要是选择类组件。按钮类、输入类组件并不适合做成datacom。",
      "选择模式：单选、多选",
      "数据结构：数组、树、数值范围",
      "展现方式：平铺、弹出",
      "使用场景：表单、展示",
      "在export default下声明`mixin: [uniCloud.mixinDatacom]`",
      "在template中定义三个标签，绑定 `uniCloud.mixinDatacom` 的 `data` 状态，加载中`mixinDatacomLoading` 、加载出错提示 `mixinDatacomErrorMessage`、处理数据及相关UI展现 `mixinDatacomResData`",
      "组件的created声明周期中调用 `uniCloud.mixinDatacom` 中的 `mixinDatacomGet()` 或 `mixinDatacomEasyGet()` 方法请求云端数据库。这两种方法的区别如下：\n - `mixinDatacomGet()` 仅请求数据，自行处理各种状态和异常。\n - `mixinDatacomEasyGet()` 在 `mixinDatacomGet()` 的基础之上封装了加载状态、分页及错误消息，可通过模板绑定。用起来更简单",
      "不需要定义 `datacom` 组件的属性",
      "不需要关心 `uniClinetDB` API",
      "不需要判断哪些属性变化时需要重置已加载数据， 仅判断 `onMixinDatacomPropsChange(needReset, changed) {}` 参数 `needReset` 是否为 `true` 即可",
      "当 `uniClinetDB` 有新增属性时，组件代码也不需要跟随更新",
      "方法1，使用 `mixinDatacomEasyGet()`",
      "方法2，使用 `mixinDatacomGet()` "
    ]
  },
  {
    "name": "editor",
    "desc": ["富文本编辑器，可以对图片、文字格式进行编辑和混排。"],
    "attrs": [
      {
        "name": "read-only",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["否"],
        "since": "设置编辑器为只读",
        "enum": []
      },
      {
        "name": "placeholder",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "提示信息",
        "enum": []
      },
      {
        "name": "show-img-size",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["否"],
        "since": "点击图片时显示图片大小控件",
        "enum": []
      },
      {
        "name": "show-img-toolbar",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["否"],
        "since": "点击图片时显示工具栏控件",
        "enum": []
      },
      {
        "name": "show-img-resize",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["否"],
        "since": "点击图片时显示修改尺寸控件",
        "enum": []
      },
      {
        "name": "ready",
        "type": { "name": "eventhandle" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "编辑器初始化完成时触发",
        "enum": []
      },
      {
        "name": "focus",
        "type": { "name": "eventhandle" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "编辑器聚焦时触发，event.detail = {html, text, delta}",
        "enum": []
      },
      {
        "name": "blur",
        "type": { "name": "eventhandle" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "编辑器失去焦点时触发，detail = {html, text, delta}",
        "enum": []
      },
      {
        "name": "input",
        "type": { "name": "eventhandle" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "编辑器内容改变时触发，detail = {html, text, delta}",
        "enum": []
      },
      {
        "name": "statuschange",
        "type": { "name": "eventhandle" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "通过 Context 方法改变编辑器内样式时触发，返回选区已设置的样式",
        "enum": []
      }
    ],
    "tips": [
      "插入的 html 中事件绑定会被移除",
      "formats 中的 color 属性会统一以 hex 格式返回",
      "粘贴时仅纯文本内容会被拷贝进编辑器",
      "插入 html 到编辑器内时，编辑器会删除一些不必要的标签，以保证内容的统一。例如`<p><span>xxx</span></p>`会改写为`<p>xxx</p>`",
      "编辑器聚焦时页面会被上推，系统行为以保证编辑区可见",
      "H5端会动态引入依赖 [quill.min.js](https://unpkg.com/quill@1.3.7/dist/quill.min.js)、[image-resize.min.js](https://unpkg.com/quill-image-resize-mp@3.0.1/image-resize.min.js)，依赖从 [unpkg.com](https://unpkg.com) 加载，如过依赖加载较慢，可以下载下来放在自己的服务器或 CDN 服务商，然后在 [自定义模板](/collocation/manifest?id=h5-template) head 内引入。",
      "不能直接插入视频，编辑时可以采用视频封面占位，并在图片属性中保存视频信息，预览时再还原为视频。"
    ]
  },
  {
    "name": "form",
    "desc": [
      "表单，将组件内的用户输入的``<switch>`` ``<input>`` ``<checkbox>`` ``<slider>`` ``<radio>`` ``<picker>`` 提交。"
    ],
    "attrs": [
      {
        "name": "report-submit",
        "type": { "name": "Boolean" },
        "defaultValue": "是否返回 formId 用于发送[模板消息](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/template-message.html)",
        "desc": ["微信小程序、支付宝小程序"],
        "enum": []
      },
      {
        "name": "report-submit-timeout",
        "type": { "name": "number" },
        "defaultValue": "等待一段时间（毫秒数）以确认 formId 是否生效。如果未指定这个参数，formId 有很小的概率是无效的（如遇到网络失败的情况）。指定这个参数将可以检测 formId 是否有效，以这个参数的时间作为这项检测的超时时间。如果失败，将返回 requestFormId:fail 开头的 formId",
        "desc": ["微信小程序2.6.2"],
        "enum": []
      },
      {
        "name": "submit",
        "type": { "name": "EventHandle" },
        "defaultValue": "携带 form 中的数据触发 submit 事件，event.detail = {value : {'name': 'value'} , formId: ''}，report-submit 为 true 时才会返回 formId",
        "desc": [""],
        "enum": []
      },
      {
        "name": "reset",
        "type": { "name": "EventHandle" },
        "defaultValue": "表单重置时会触发 reset 事件",
        "desc": ["&nbsp;"],
        "enum": []
      },
      {
        "name": "name",
        "type": { "name": "String" },
        "defaultValue": "在表单中的字段名",
        "desc": [null],
        "enum": []
      },
      {
        "name": "value",
        "type": { "name": "任意" },
        "defaultValue": "在表单中的字段值",
        "desc": [null],
        "enum": []
      }
    ],
    "tips": [
      "为方便做表单验证，uni ui提供了`<uni-forms>`组件，参考：[https://ext.dcloud.net.cn/plugin?id=2773](https://ext.dcloud.net.cn/plugin?id=2773)",
      "如果使用uniCloud，其数据库提供了`DB Schema`，在schema中配置字段的格式，前端表单校验和服务器入参校验将可以复用该规则，无需在前端后端重复开发表单校验。[详见](https://uniapp.dcloud.io/uniCloud/schema)",
      "有很多表单自助生成辅助工具\n* 如果使用uniCloud的`DB Schema`可以自动生成全套表单，包括界面、校验逻辑、提交入库，[详见](https://uniapp.dcloud.io/uniCloud/schema?id=autocode).\n* 不使用uniCloud的话，插件市场有可视化拖拽表单插件：[详见](https://ext.dcloud.net.cn/search?q=%E5%8F%AF%E8%A7%86%E5%8C%96)。这类插件只生成界面，没有逻辑。"
    ]
  },
  {
    "name": "icon",
    "desc": ["图标。"],
    "attrs": [
      {
        "name": "type",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["icon的类型"],
        "enum": []
      },
      {
        "name": "size",
        "type": { "name": "Number" },
        "defaultValue": "23",
        "desc": ["icon的大小，单位px"],
        "enum": []
      },
      {
        "name": "color",
        "type": { "name": "Color" },
        "defaultValue": "",
        "desc": ["icon的颜色，同css的color"],
        "enum": []
      }
    ],
    "tips": [
      "由于 icon 组件各端表现存在差异，可以通过使用 [字体图标](/frame?id=字体图标) 的方式来弥补各端差异。"
    ]
  },
  {
    "name": "image",
    "desc": ["图片。"],
    "attrs": [
      {
        "name": "src",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["图片资源地址"],
        "since": "",
        "enum": []
      },
      {
        "name": "mode",
        "type": { "name": "String" },
        "defaultValue": "'scaleToFill'",
        "desc": ["图片裁剪、缩放的模式"],
        "since": "<div style=\"width:68px;\"></div>",
        "enum": [
          {
            "value": "scaleToFill",
            "desc": "不保持纵横比缩放图片，使图片的宽高完全拉伸至填满 image 元素"
          },
          {
            "value": "aspectFit",
            "desc": "保持纵横比缩放图片，使图片的长边能完全显示出来。也就是说，可以完整地将图片显示出来。"
          },
          {
            "value": "aspectFill",
            "desc": "保持纵横比缩放图片，只保证图片的短边能完全显示出来。也就是说，图片通常只在水平或垂直方向是完整的，另一个方向将会发生截取。"
          },
          {
            "value": "widthFix",
            "desc": "宽度不变，高度自动变化，保持原图宽高比不变"
          },
          {
            "value": "heightFix",
            "desc": "高度不变，宽度自动变化，保持原图宽高比不变 **App 和 H5 平台 HBuilderX 2.9.3+ 支持、微信小程序需要基础库 2.10.3**"
          },
          { "value": "top", "desc": "不缩放图片，只显示图片的顶部区域" },
          { "value": "bottom", "desc": "不缩放图片，只显示图片的底部区域" },
          { "value": "center", "desc": "不缩放图片，只显示图片的中间区域" },
          { "value": "left", "desc": "不缩放图片，只显示图片的左边区域" },
          { "value": "right", "desc": "不缩放图片，只显示图片的右边区域" },
          { "value": "top left", "desc": "不缩放图片，只显示图片的左上边区域" },
          {
            "value": "top right",
            "desc": "不缩放图片，只显示图片的右上边区域"
          },
          {
            "value": "bottom left",
            "desc": "不缩放图片，只显示图片的左下边区域"
          },
          {
            "value": "bottom right",
            "desc": "不缩放图片，只显示图片的右下边区域"
          }
        ]
      },
      {
        "name": "lazy-load",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["图片懒加载。只针对page与scroll-view下的image有效"],
        "since": "微信小程序、百度小程序、字节跳动小程序",
        "enum": []
      },
      {
        "name": "fade-show",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["图片显示动画效果"],
        "since": "仅App-nvue 2.3.4+ Android有效",
        "enum": []
      },
      {
        "name": "webp",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["默认不解析 webP 格式，只支持网络资源"],
        "since": "微信小程序2.9.0",
        "enum": []
      },
      {
        "name": "show-menu-by-longpress",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["开启长按图片显示识别小程序码菜单"],
        "since": "微信小程序2.7.0",
        "enum": []
      },
      {
        "name": "draggable",
        "type": { "name": "boolean" },
        "defaultValue": "true",
        "desc": ["鼠标长按是否能拖动图片"],
        "since": "仅 H5 平台 3.1.1+ 有效",
        "enum": []
      },
      {
        "name": "error",
        "type": { "name": "HandleEvent" },
        "defaultValue": "",
        "desc": [
          "当错误发生时，发布到 AppService 的事件名，事件对象event.detail = {errMsg: 'something wrong'}"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "load",
        "type": { "name": "HandleEvent" },
        "defaultValue": "",
        "desc": [
          "当图片载入完毕时，发布到 AppService 的事件名，事件对象event.detail = {height:'图片高度px', width:'图片宽度px'}"
        ],
        "since": "&nbsp;",
        "enum": []
      }
    ],
    "tips": [
      "`<image>` 组件默认宽度 300px、高度 225px；`app-nvue平台，暂时默认为屏幕宽度`",
      "`src` 仅支持相对路径、绝对路径，支持 base64 码；",
      "页面结构复杂，css样式太多的情况，使用 image 可能导致样式生效较慢，出现 “闪一下” 的情况，此时设置 `image{will-change: transform}` ,可优化此问题。",
      "自定义组件里面使用 `<image>`时，若 `src` 使用相对路径可能出现路径查找失败的情况，故建议使用绝对路径。",
      "webp格式的图片在Android上是内置支持的。iOS上不同平台不一样，具体如下：app-vue下，iOS不支持；app-nvue下，iOS支持；微信小程序2.9.0起，iOS支持。",
      "svg 格式的图片在不同的平台支持情况不同。具体为：app-nvue 不支持 svg 格式的图片，小程序上只支持网络地址。"
    ]
  },
  {
    "name": "input",
    "desc": ["输入框。"],
    "attrs": [
      {
        "name": "value",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["输入框的初始内容"],
        "since": "",
        "enum": []
      },
      {
        "name": "type",
        "type": { "name": "String" },
        "defaultValue": "text",
        "desc": ["input 的类型"],
        "since": "H5 暂未支持动态切换，详见下方 Tips，请使用 v-if 进行整体切换",
        "enum": [
          { "value": "text", "desc": "文本输入键盘" },
          { "value": "number", "desc": "数字输入键盘" },
          { "value": "idcard", "desc": "身份证输入键盘" },
          { "value": "digit", "desc": "带小数点的数字键盘" },
          { "value": "tel", "desc": "电话输入键盘" }
        ]
      },
      {
        "name": "text-content-type",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["文本区域的语义，根据类型自动填充"],
        "since": "仅 App-nvue-iOS 支持",
        "enum": [{ "value": "oneTimeCode", "desc": "一次性验证码" }]
      },
      {
        "name": "password",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否是密码类型"],
        "since": "H5和App写此属性时，type失效",
        "enum": []
      },
      {
        "name": "placeholder",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["输入框为空时占位符"],
        "since": "",
        "enum": []
      },
      {
        "name": "placeholder-style",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["指定 placeholder 的样式"],
        "since": "",
        "enum": []
      },
      {
        "name": "placeholder-class",
        "type": { "name": "String" },
        "defaultValue": "\"input-placeholder\"",
        "desc": [
          "指定 placeholder 的样式类，注意页面或组件的style中写了scoped时，需要在类名前写/deep/"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "disabled",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否禁用"],
        "since": "",
        "enum": []
      },
      {
        "name": "maxlength",
        "type": { "name": "Number" },
        "defaultValue": "140",
        "desc": ["最大输入长度，设置为 -1 的时候不限制最大长度"],
        "since": "",
        "enum": []
      },
      {
        "name": "cursor-spacing",
        "type": { "name": "Number" },
        "defaultValue": "0",
        "desc": [
          "指定光标与键盘的距离，单位 px 。取 input 距离底部的距离和 cursor-spacing 指定的距离的最小值作为光标与键盘的距离"
        ],
        "since": "App、微信小程序、百度小程序、QQ小程序",
        "enum": []
      },
      {
        "name": "focus",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["获取焦点。"],
        "since": "在 H5 平台能否聚焦以及软键盘是否跟随弹出，取决于当前浏览器本身的实现。nvue 页面不支持，需使用组件的 focus()、blur() 方法控制焦点",
        "enum": []
      },
      {
        "name": "confirm-type",
        "type": { "name": "String" },
        "defaultValue": "done",
        "desc": ["设置键盘右下角按钮的文字，仅在 type=\"text\" 时生效。"],
        "since": "微信小程序、App、H5",
        "enum": [
          { "value": "send", "desc": "右下角按钮为“发送”" },
          { "value": "search", "desc": "右下角按钮为“搜索”" },
          { "value": "next", "desc": "右下角按钮为“下一个”" },
          { "value": "go", "desc": "右下角按钮为“前往”" },
          { "value": "done", "desc": "右下角按钮为“完成”" }
        ]
      },
      {
        "name": "confirm-hold",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["点击键盘右下角按钮时是否保持键盘不收起"],
        "since": "App、微信小程序、支付宝小程序、百度小程序、QQ小程序",
        "enum": []
      },
      {
        "name": "cursor",
        "type": { "name": "Number" },
        "defaultValue": "",
        "desc": ["指定focus时的光标位置"],
        "since": "",
        "enum": []
      },
      {
        "name": "selection-start",
        "type": { "name": "Number" },
        "defaultValue": "-1",
        "desc": ["光标起始位置，自动聚集时有效，需与selection-end搭配使用"],
        "since": "",
        "enum": []
      },
      {
        "name": "selection-end",
        "type": { "name": "Number" },
        "defaultValue": "-1",
        "desc": ["光标结束位置，自动聚集时有效，需与selection-start搭配使用"],
        "since": "",
        "enum": []
      },
      {
        "name": "adjust-position",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["键盘弹起时，是否自动上推页面"],
        "since": "App-Android（vue 页面 softinputMode 为 adjustResize 时无效）、微信小程序、百度小程序、QQ小程序",
        "enum": []
      },
      {
        "name": "hold-keyboard",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["focus时，点击页面的时候不收起键盘"],
        "since": "微信小程序2.8.2",
        "enum": []
      },
      {
        "name": "auto-blur",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["键盘收起时，是否自动失去焦点"],
        "since": "App 3.0.0+",
        "enum": []
      },
      {
        "name": "input",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["当键盘输入时，触发input事件，event.detail = {value}"],
        "since": "差异见下方 Tips",
        "enum": []
      },
      {
        "name": "focus",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "输入框聚焦时触发，event.detail = { value, height }，height 为键盘高度"
        ],
        "since": "仅微信小程序、App（2.2.3+） 、QQ小程序支持 height",
        "enum": []
      },
      {
        "name": "blur",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["输入框失去焦点时触发，event.detail = {value: value}"],
        "since": "",
        "enum": []
      },
      {
        "name": "confirm",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["点击完成按钮时触发，event.detail = {value: value}"],
        "since": "&nbsp;",
        "enum": []
      },
      {
        "name": "keyboardheightchange",
        "type": { "name": "eventhandle" },
        "defaultValue": "",
        "desc": [
          "键盘高度发生变化的时候触发此事件，event.detail = {height: height, duration: duration}"
        ],
        "since": "微信小程序基础库2.7.0+、App 3.1.0+",
        "enum": []
      }
    ],
    "tips": [
      "`input` 事件处理函数可以直接 return 一个字符串，将替换输入框的内容。仅微信小程序支持。",
      "如果遇到 value 属性设置不生效的问题参考：[组件属性设置不生效解决办法](/vue-api?id=_4-组件属性设置不生效解决办法)",
      "`input` 组件上有默认的 `min-height` 样式，如果 `min-height` 的值大于 `height` 的值那么 `height` 样式无效。",
      "H5 暂未支持动态切换，请使用 `v-if`进行整体切换。",
      "原html规范中input不仅是输入框，还有radio、checkbox、时间、日期、文件选择功能。在uni-app和小程序规范中，input仅仅是输入框。其他功能uni-app有单独的组件或API：[radio组件](https://uniapp.dcloud.io/component/radio)、[checkbox组件](https://uniapp.dcloud.io/component/checkbox)、[时间选择](https://uniapp.dcloud.io/component/picker?id=%e6%97%b6%e9%97%b4%e9%80%89%e6%8b%a9%e5%99%a8)、[日期选择](https://uniapp.dcloud.io/component/picker?id=%e6%97%a5%e6%9c%9f%e9%80%89%e6%8b%a9%e5%99%a8)、[图片选择](https://uniapp.dcloud.io/api/media/image?id=chooseimage)、[视频选择](https://uniapp.dcloud.io/api/media/video?id=choosevideo)、[多媒体文件选择(含图片视频)](https://uniapp.dcloud.io/api/media/video?id=choosemedia)、[通用文件选择](https://uniapp.dcloud.io/api/media/file?id=choosefile)。",
      "小程序平台，`number` 类型只支持输入整型数字。微信开发者工具上体现不出效果，请使用真机预览。",
      "如果需要在小程序平台输入浮点型数字，请使用 `digit` 类型。",
      "小程序端input在置焦时，会表现为原生控件，此时会层级变高。如需前端组件遮盖input，需让input失焦，或使用cover-view等覆盖原生控件的方案，[参考](https://uniapp.dcloud.io/component/native-component)。具体来讲，阿里小程序的input为text且置焦为原生控件；微信、头条、QQ所有input置焦均为原生控件；百度小程序置焦时仍然是非原生的。也可以参考[原生控件](https://uniapp.dcloud.io/component/native-component)文档",
      "input组件若不想弹出软键盘，可设置为disabled",
      "App平台的nvue页面，如果是weex编译模式，需通过weex的api设置（weex模式已被淘汰）",
      "App平台的vue页面及 H5平台 的弹出键盘使用的是浏览器控制的键盘，在Chrome81+、Safari13.7+之前，键盘右下角文字只能设置完成和搜索，从Chrome81+、Safari13.7+起支持设置发送、下一个。",
      "App平台涉及聊天的建议使用nvue，一方面因为app-vue控制键盘右下角按键文字为“发送”对webview内核有要求，另一方面聊天记录如使用sroll-view，过长的内容在app-vue上会有性能问题。",
      "如需使用js动态设置softinputNavBar\n```javascript\nthis.$scope.$getAppWebview().setStyle({\n  softinputNavBar: 'none'\n})\n//this.$scope.$getAppWebview()相当于html5plus里的plus.webview.currentWebview()。在uni-app里vue页面直接使用plus.webview.currentWebview()无效，非v3编译模式使用this.$mp.page.$getAppWebview()\n```",
      "adjustResize：软键盘弹出时，webview窗体高度挤压。屏幕高度=webview窗体高度+软键盘高度",
      "adjustPan：软键盘弹出时，webview窗体高度不变，但窗体上推，以保证输入框不被软键盘盖住",
      "adjustResize模式在Android App上，弹起键盘和收回键盘时，因为要重设webview窗体高度，可能会在个别安卓机型闪现灰屏或漏出下层页面内容。",
      "小程序端在 input 聚焦期间，避免使用 css 动画。",
      "H5平台只能在用户交互时修改 focus 生效。",
      "如果遇到 focus 属性设置不生效的问题参考：[组件属性设置不生效解决办法](/vue-api?id=_4-组件属性设置不生效解决办法)",
      "如需禁止点击其他位置收起键盘的默认行为，可以监听`touch`事件并使用`prevent`修饰符（仅支持App-v3、H5，其他平台可以通过设置`focus`来使输入框重新获取焦点），例如在确认按钮上使用：```@touchend.prevent=\"onTap\"```",
      "Android上在软键盘弹出后，点击back或点击非置焦区域可收起软键盘。",
      "iOS上如果软键盘上方有带有“完成”的横条，则需要点完成才能收起键盘；如果没有软键盘上方横条，则点击非input/textarea区域即可收起软键盘",
      "原生输入框在iOS上不会有软键盘上方的横条",
      "原生输入框一样受配置的`adjustPan|adjustResize`模式影响",
      "uni ui提供了easyinput组件，提供了常用的封装，可搭配uni-forms组件，支持表单验证、支持各种常用设置。[详见](https://ext.dcloud.net.cn/plugin?id=3455)",
      "uni ui提供了combox组件，可选可输入，常用词免输入。[详见](https://ext.dcloud.net.cn/plugin?id=1261)",
      "uni ui提供了搜索框ui组件，插件市场还有封装好的页面模板。[详见](https://ext.dcloud.net.cn/search?q=search)。云端一体搜索模板功能完善，推荐使用：[https://ext.dcloud.net.cn/plugin?id=3851](https://ext.dcloud.net.cn/plugin?id=3851)",
      "uni-app插件市场有输入文字后自动提示候选的组件，可搜索 [autocomplete](https://ext.dcloud.net.cn/search?q=autocomplete) 查看。",
      "插件市场有各种类型的模拟键盘，比如车牌键盘、身份证键盘，可去插件市场搜索 [键盘](https://ext.dcloud.net.cn/search?q=%E9%94%AE%E7%9B%98)。"
    ]
  },
  {
    "name": "label",
    "desc": [
      "用来改进表单组件的可用性，使用for属性找到对应的id，或者将控件放在该标签下，当点击时，就会触发对应的控件。"
    ],
    "attrs": [
      {
        "name": "for",
        "type": { "name": "String" },
        "defaultValue": "绑定控件的 id",
        "desc": [null],
        "enum": []
      }
    ],
    "tips": ["app-nvue平台 暂不支持for属性"]
  },
  {
    "name": "list",
    "desc": [
      "app端nvue专用组件。在app-nvue下，如果是长列表，使用list组件的性能高于使用view或scroll-view的滚动。原因在于list在不可见部分的渲染资源回收有特殊的优化处理。"
    ],
    "attrs": [
      {
        "name": "show-scrollbar",
        "type": { "name": "控制是否出现滚动条" },
        "defaultValue": "boolean",
        "desc": ["true"],
        "enum": []
      },
      {
        "name": "bounce",
        "type": { "name": "控制是否回弹效果, iOS 不支持动态修改" },
        "defaultValue": "boolean",
        "desc": ["true"],
        "enum": []
      },
      {
        "name": "loadmoreoffset",
        "type": {
          "name": "触发 loadmore 事件所需要的垂直偏移距离（设备屏幕底部与 list 底部之间的距离），建议手动设置此值，设置大于0的值即可"
        },
        "defaultValue": "number",
        "desc": ["0"],
        "enum": []
      },
      {
        "name": "offset-accuracy",
        "type": {
          "name": "控制 onscroll 事件触发的频率：表示两次onscroll事件之间列表至少滚动了10px。注意，将该值设置为较小的数值会提高滚动事件采样的精度，但同时也会降低页面的性能"
        },
        "defaultValue": "number",
        "desc": ["10"],
        "enum": []
      },
      {
        "name": "pagingEnabled",
        "type": { "name": "是否按分页模式显示List，默认值false" },
        "defaultValue": "boolean",
        "desc": ["true/false"],
        "enum": []
      },
      {
        "name": "scrollable",
        "type": { "name": "是否允许List滚动" },
        "defaultValue": "boolean",
        "desc": ["true/false"],
        "enum": []
      },
      {
        "name": "enable-back-to-top",
        "type": { "name": "iOS点击顶部状态栏滚动条返回顶部，只支持竖向" },
        "defaultValue": "boolean",
        "desc": ["false"],
        "enum": []
      },
      {
        "name": "id",
        "type": { "name": "list父容器滚动组件id" },
        "defaultValue": "String",
        "desc": ["是"],
        "since": "应为最外层滚动容器，必须是list组件",
        "enum": []
      },
      {
        "name": "headerHeight",
        "type": { "name": "吸顶距离" },
        "defaultValue": "Number",
        "desc": ["是"],
        "since": "子list吸顶距离最外层滚动容器顶部的距离",
        "enum": []
      },
      {
        "name": "id",
        "type": { "name": "string" },
        "defaultValue": "无",
        "desc": ["是"],
        "since": "和list同时滚动的组件id，应为外层的scroller",
        "enum": []
      },
      {
        "name": "headerHeight",
        "type": { "name": "float" },
        "defaultValue": "0",
        "desc": ["是"],
        "since": "要吸顶的header顶部距离scroller顶部的距离，Android暂不支持",
        "enum": []
      }
    ],
    "tips": [
      "`<cell>`<br>\n用于定义列表中的子列表项，类似于 HTML 中的 ul 之于 li。`<list>` 会对 `<cell>` 进行高效的内存回收以达到更好的性能。",
      "`<header>`<br>当 `<header>` 到达屏幕顶部时，吸附在屏幕顶部。",
      "`<refresh>`<br>用于给列表添加下拉刷新的功能。",
      "`<loading>`<br>\n`<loading>` 用法与特性和 `<refresh>` 类似，用于给列表添加上拉加载更多的功能。",
      "`loadmore` 事件\n如果列表滚动到底部将会立即触发这个事件，你可以在这个事件的处理函数中加载下一页的列表项。 如果未触发，请检查是否设置了loadmoreoffset的值，建议此值设置大于0",
      "如何重置 loadmore",
      "`scroll` 事件\n列表发生滚动时将会触发该事件，事件的默认抽样率为 10px，即列表每滚动 10px 触发一次，可通过属性 offset-accuracy 设置抽样率。\n\n事件中的 event 对象属性：\n- `contentSize {Object}`：列表的内容尺寸\n  - `width {number}`：列表内容宽度\n  - `height {number}`：列表内容高度\n- `contentOffset {Object}`：列表的偏移尺寸\n  - `x {number}`：x轴上的偏移量\n  - `y {number}`：y轴上的偏移量\n- `isDragging {boolean}`: 用户是否正在拖动列表"
    ]
  },
  {
    "name": "live-player",
    "desc": ["实时音视频播放，也称直播拉流。"],
    "attrs": [
      {
        "name": "id",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["live-player 属性的唯一标志符"],
        "since": "",
        "enum": []
      },
      {
        "name": "src",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "音视频地址。百度小程序支持 m3u8 格式；微信小程序支持 flv, rtmp 格式"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "mode",
        "type": { "name": "String" },
        "defaultValue": "live",
        "desc": ["live（直播），RTC（实时通话，该模式时延更低）"],
        "since": "微信小程序",
        "enum": []
      },
      {
        "name": "autoplay",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["自动播放"],
        "since": "",
        "enum": []
      },
      {
        "name": "muted",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否静音"],
        "since": "",
        "enum": []
      },
      {
        "name": "orientation",
        "type": { "name": "String" },
        "defaultValue": "vertical",
        "desc": ["画面方向，可选值有 vertical，horizontal"],
        "since": "",
        "enum": []
      },
      {
        "name": "object-fit",
        "type": { "name": "String" },
        "defaultValue": "contain",
        "desc": ["填充模式，可选值:contain、fillCrop"],
        "since": "",
        "enum": []
      },
      {
        "name": "background-mute",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["进入后台时是否静音"],
        "since": "",
        "enum": []
      },
      {
        "name": "min-cache",
        "type": { "name": "Number" },
        "defaultValue": "1",
        "desc": ["最小缓冲区，单位s"],
        "since": "",
        "enum": []
      },
      {
        "name": "max-cache",
        "type": { "name": "Number" },
        "defaultValue": "3",
        "desc": ["最大缓冲区，单位s"],
        "since": "",
        "enum": []
      },
      {
        "name": "picture-in-picture-mode",
        "type": { "name": "string/Array" },
        "defaultValue": "3",
        "desc": [
          "设置小窗模式： push, pop，空字符串或通过数组形式设置多种模式（如： [\"push\", \"pop\"]）"
        ],
        "since": "微信小程序（2.10.3）",
        "enum": []
      },
      {
        "name": "statechange",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["播放状态变化事件，detail = {code}"],
        "since": "",
        "enum": []
      },
      {
        "name": "netstatus",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["网络状态通知，detail = {info}"],
        "since": "",
        "enum": []
      },
      {
        "name": "fullscreenchange",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["全屏变化事件，detail = {direction, fullScreen}。"],
        "since": "&nbsp;",
        "enum": []
      },
      {
        "name": "audiovolumenotify",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["播放音量大小通知，detail = {}"],
        "since": "微信小程序（2.10.0）",
        "enum": []
      },
      {
        "name": "enterpictureinpicture",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["播放器进入小窗"],
        "since": "微信小程序（2.11.0）",
        "enum": []
      },
      {
        "name": "leavepictureinpicture",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["播放器退出小窗"],
        "since": "2.11.0",
        "enum": []
      }
    ],
    "tips": [
      "App的实时音视频播放，不是使用 live-player，而是直接使用 video 组件。",
      "H5 下可用 video 播放符合 HTML5 规范的流媒体，rtmp 等非 HTML5 标准的流媒体格式，仅在部分支持 flash 的国内手机浏览器上可播放。在 pc 浏览器上，需要安装 flash 插件才能播放 rtmp 等格式。",
      "百度小程序 iOS 端不支持设置 orientation 属性；",
      "微信小程序已废弃 background-mute 属性，默认为进入后台静音；",
      "live-player 默认宽度 300px、高度 225px；",
      "live-player 是原生组件，层级高于前端组件，请勿在 scroll-view、swiper、picker-view、movable-view 中使用",
      "小程序下覆盖live-player需要使用cover-view。[详见](/component/native-component)",
      "live-player 组件相关 JS API：[createLivePlayerContext](/api/media/live-player-context)",
      "小程序平台使用live-player有审核限制，请注意参考各家文档。",
      "App端使用直播，推荐nvue页面下用video组件，可避免复杂的层级问题和全屏覆盖问题。"
    ]
  },
  {
    "name": "live-pusher",
    "desc": ["实时音视频录制，也称直播推流。"],
    "attrs": [
      {
        "name": "url",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["是"],
        "since": "推流地址，支持RTMP协议。",
        "enum": []
      },
      {
        "name": "mode",
        "type": { "name": "string" },
        "defaultValue": "SD",
        "desc": ["否"],
        "since": "推流视频模式，可取值：SD（标清）, HD（高清）, FHD（超清）。",
        "enum": []
      },
      {
        "name": "aspect",
        "type": { "name": "string" },
        "defaultValue": "3:2",
        "desc": ["否"],
        "since": "视频宽高比例",
        "enum": []
      },
      {
        "name": "muted",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["否"],
        "since": "是否静音。",
        "enum": []
      },
      {
        "name": "enable-camera",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["否"],
        "since": "开启摄像头。",
        "enum": []
      },
      {
        "name": "auto-focus",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["否"],
        "since": "自动聚集。",
        "enum": []
      },
      {
        "name": "beauty",
        "type": { "name": "Number" },
        "defaultValue": "0",
        "desc": ["否"],
        "since": "美颜，取值范围 0-9（iOS取值范围为1） ，0 表示关闭。",
        "enum": []
      },
      {
        "name": "whiteness",
        "type": { "name": "Number" },
        "defaultValue": "0",
        "desc": ["否"],
        "since": "美白，取值范围 0-9（iOS取值范围为1） ，0 表示关闭。",
        "enum": []
      },
      {
        "name": "orientation",
        "type": { "name": "String" },
        "defaultValue": "\"vertical\"",
        "desc": ["否"],
        "since": "画面方向",
        "enum": []
      },
      {
        "name": "beauty",
        "type": { "name": "number" },
        "defaultValue": "0",
        "desc": ["否"],
        "since": "美颜，取值范围 0-9 ，0 表示关闭",
        "enum": []
      },
      {
        "name": "whiteness",
        "type": { "name": "number" },
        "defaultValue": "0",
        "desc": ["否"],
        "since": "美白，取值范围 0-9 ，0 表示关闭",
        "enum": []
      },
      {
        "name": "min-bitrate",
        "type": { "name": "Number" },
        "defaultValue": "200",
        "desc": ["否"],
        "since": "最小码率。",
        "enum": []
      },
      {
        "name": "max-bitrate",
        "type": { "name": "Number" },
        "defaultValue": "1000",
        "desc": ["否"],
        "since": "最大码率。",
        "enum": []
      },
      {
        "name": "audio-quality",
        "type": { "name": "string" },
        "defaultValue": "high",
        "desc": ["否"],
        "since": "高音质(48KHz)或低音质(16KHz)，值为high, low",
        "enum": []
      },
      {
        "name": "waiting-image",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "进入后台时推流的等待画面",
        "enum": []
      },
      {
        "name": "waiting-image-hash",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "等待画面资源的MD5值",
        "enum": []
      },
      {
        "name": "zoom",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["否"],
        "since": "调整焦距",
        "enum": []
      },
      {
        "name": "device-position",
        "type": { "name": "string" },
        "defaultValue": "front",
        "desc": ["否"],
        "since": "前置或后置，值为front, back",
        "enum": []
      },
      {
        "name": "background-mute",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["否"],
        "since": "进入后台时是否静音",
        "enum": []
      },
      {
        "name": "remote-mirror",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["否"],
        "since": "设置推流画面是否镜像，产生的效果在 live-player 反应到",
        "enum": []
      },
      {
        "name": "local-mirror",
        "type": { "name": "string" },
        "defaultValue": "auto",
        "desc": ["否"],
        "since": "控制本地预览画面是否镜像",
        "enum": []
      },
      {
        "name": "audio-reverb-type",
        "type": { "name": "number" },
        "defaultValue": "0",
        "desc": ["否"],
        "since": "音频混响类型",
        "enum": []
      },
      {
        "name": "enable-mic",
        "type": { "name": "boolean" },
        "defaultValue": "true",
        "desc": ["否"],
        "since": "开启或关闭麦克风",
        "enum": []
      },
      {
        "name": "enable-agc",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["否"],
        "since": "是否开启音频自动增益",
        "enum": []
      },
      {
        "name": "enable-ans",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["否"],
        "since": "是否开启音频噪声抑制",
        "enum": []
      },
      {
        "name": "audio-volume-type",
        "type": { "name": "string" },
        "defaultValue": "voicecall",
        "desc": ["否"],
        "since": "音量类型",
        "enum": []
      },
      {
        "name": "statechange",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [""],
        "since": "状态变化事件，detail = {code}",
        "enum": []
      },
      {
        "name": "netstatus",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [""],
        "since": "网络状态通知，detail = {info}",
        "enum": []
      },
      {
        "name": "error",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [""],
        "since": "渲染错误事件，detail = {errMsg, errCode}",
        "enum": []
      },
      {
        "name": "bgmstart",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [""],
        "since": "背景音开始播放时触发",
        "enum": []
      },
      {
        "name": "bgmprogress",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [""],
        "since": "背景音进度变化时触发，detail = {progress, duration}",
        "enum": []
      },
      {
        "name": "bgmcomplete",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [""],
        "since": "背景音播放完成时触发",
        "enum": []
      }
    ],
    "tips": [
      "nvue也可一套代码编译多端。",
      "nvue的cover-view比vue的cover-view更强大，在视频上绘制元素更容易。如果只考虑App端的话，不用cover-view，任意组件都可以覆盖live-pusher组件，因为nvue没有层级问题。",
      "若需要视频内嵌在swiper里上下滑动（类抖音、映客首页模式），App端只有nvue才能实现\n当然nvue相比vue的坏处是css写法受限，如果只开发微信小程序，不考虑App，那么使用vue页面也是一样的。",
      "live-pusher 是原生组件，在小程序端层级高于前端组件，需使用cover-view覆盖。在低版本微信中，live-pusher无法内嵌于 scroll-view、swiper、picker-view、movable-view 中。在App端的nvue文件中，live-pusher没有这类限制。",
      "App平台：使用 `<live-pusher/>` 组件，打包 App 时必须勾选 manifest.json->App 模块权限配置->LivePusher(直播推流) 模块。"
    ]
  },
  {
    "name": "map",
    "desc": ["地图组件。"],
    "attrs": [
      {
        "name": "longitude",
        "type": { "name": "Number" },
        "defaultValue": "",
        "desc": ["中心经度"],
        "since": "",
        "enum": []
      },
      {
        "name": "latitude",
        "type": { "name": "Number" },
        "defaultValue": "",
        "desc": ["中心纬度"],
        "since": "",
        "enum": []
      },
      {
        "name": "scale",
        "type": { "name": "Number" },
        "defaultValue": "16",
        "desc": ["缩放级别，取值范围为3-20"],
        "since": "高德地图缩放比例与微信小程序不同",
        "enum": []
      },
      {
        "name": "min-scale",
        "type": { "name": "Number" },
        "defaultValue": "3",
        "desc": ["最小缩放级别"],
        "since": "App-nvue 3.1.0+、微信小程序2.13+",
        "enum": []
      },
      {
        "name": "max-scale",
        "type": { "name": "Number" },
        "defaultValue": "20",
        "desc": ["最大缩放级别"],
        "since": "App-nvue 3.1.0+、微信小程序2.13+",
        "enum": []
      },
      {
        "name": "layer-style",
        "type": { "name": "Number" },
        "defaultValue": "1",
        "desc": ["个性化地图"],
        "since": "App-nvue 3.1.0+、微信小程序2.13+",
        "enum": []
      },
      {
        "name": "markers",
        "type": { "name": "Array" },
        "defaultValue": "",
        "desc": ["标记点"],
        "since": "",
        "enum": []
      },
      {
        "name": "polyline",
        "type": { "name": "Array" },
        "defaultValue": "",
        "desc": ["路线"],
        "since": "",
        "enum": []
      },
      {
        "name": "circles",
        "type": { "name": "Array" },
        "defaultValue": "",
        "desc": ["圆"],
        "since": "",
        "enum": []
      },
      {
        "name": "controls",
        "type": { "name": "Array" },
        "defaultValue": "",
        "desc": ["控件"],
        "since": "",
        "enum": []
      },
      {
        "name": "include-points",
        "type": { "name": "Array" },
        "defaultValue": "",
        "desc": ["缩放视野以包含所有给定的坐标点"],
        "since": "App-nvue 2.1.5+、微信小程序、H5、百度小程序、支付宝小程序",
        "enum": []
      },
      {
        "name": "enable-3D",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否显示3D楼块"],
        "since": "App-nvue 2.1.5+、微信小程序2.3.0",
        "enum": []
      },
      {
        "name": "show-compass",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否显示指南针"],
        "since": "App-nvue 2.1.5+、微信小程序2.3.0",
        "enum": []
      },
      {
        "name": "enable-zoom",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["是否支持缩放"],
        "since": "App-nvue 2.1.5+、微信小程序2.3.0",
        "enum": []
      },
      {
        "name": "enable-scroll",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["是否支持拖动"],
        "since": "App-nvue 2.1.5+、微信小程序2.3.0",
        "enum": []
      },
      {
        "name": "enable-rotate",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否支持旋转"],
        "since": "App-nvue 2.1.5+、微信小程序2.3.0",
        "enum": []
      },
      {
        "name": "enable-overlooking",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否开启俯视"],
        "since": "App-nvue 2.1.5+、微信小程序2.3.0",
        "enum": []
      },
      {
        "name": "enable-satellite",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否开启卫星图"],
        "since": "App-nvue 2.1.5+、微信小程序2.7.0",
        "enum": []
      },
      {
        "name": "enable-traffic",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否开启实时路况"],
        "since": "App-nvue 2.1.5+、微信小程序2.7.0",
        "enum": []
      },
      {
        "name": "enable-poi",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否展示 POI 点"],
        "since": "App-nvue 3.1.0+",
        "enum": []
      },
      {
        "name": "enable-building",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否展示建筑物"],
        "since": "App-nvue 3.1.0+ 支持 (**废除原enable-3D属性 高德地图默认开启建筑物就是3D无法设置**)",
        "enum": []
      },
      {
        "name": "show-location",
        "type": { "name": "Boolean" },
        "defaultValue": "",
        "desc": ["显示带有方向的当前定位点"],
        "since": "微信小程序、H5、百度小程序、支付宝小程序",
        "enum": []
      },
      {
        "name": "polygons",
        "type": { "name": "Array.`<polygon>`" },
        "defaultValue": "",
        "desc": ["多边形"],
        "since": "App-nvue 2.1.5+、微信小程序、百度小程序、支付宝小程序",
        "enum": []
      },
      {
        "name": "enable-indoorMap",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否展示室内地图"],
        "since": "App-nvue 3.1.0+",
        "enum": []
      },
      {
        "name": "markertap",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["点击标记点时触发，e.detail = {markerId}"],
        "since": "App-nvue 2.3.3+, App平台需要指定 marker 对象属性 id",
        "enum": []
      },
      {
        "name": "labeltap",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["点击label时触发，e.detail = {markerId}"],
        "since": "微信小程序2.9.0",
        "enum": []
      },
      {
        "name": "callouttap",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["点击标记点对应的气泡时触发，e.detail = {markerId}"],
        "since": "",
        "enum": []
      },
      {
        "name": "controltap",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["点击控件时触发，e.detail = {controlId}"],
        "since": "",
        "enum": []
      },
      {
        "name": "regionchange",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["视野发生变化时触发"],
        "since": "微信小程序、H5、百度小程序、支付宝小程序",
        "enum": []
      },
      {
        "name": "tap",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["点击地图时触发; App-nuve、微信小程序2.9支持返回经纬度"],
        "since": "",
        "enum": []
      },
      {
        "name": "updated",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["在地图渲染更新完成时触发"],
        "since": "微信小程序、H5、百度小程序",
        "enum": []
      },
      {
        "name": "anchorpointtap",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["点击定位标时触发，e.detail = {longitude, latitude}"],
        "since": "App-nvue 3.1.0+、微信小程序2.13+",
        "enum": []
      },
      {
        "name": "poitap",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["点击地图poi点时触发，e.detail = {name, longitude, latitude}"],
        "since": "微信小程序2.3.0+",
        "enum": []
      },
      {
        "name": "id",
        "type": { "name": "标记点id" },
        "defaultValue": "Number",
        "desc": ["是"],
        "since": "marker点击事件回调会返回此id。建议为每个marker设置上Number类型id，保证更新marker时有更好的性能。最大限制9位数",
        "enum": []
      },
      {
        "name": "latitude",
        "type": { "name": "纬度" },
        "defaultValue": "Number",
        "desc": ["是"],
        "since": "浮点数，范围 -90 ~ 90",
        "enum": []
      },
      {
        "name": "longitude",
        "type": { "name": "经度" },
        "defaultValue": "Number",
        "desc": ["是"],
        "since": "浮点数，范围 -180 ~ 180",
        "enum": []
      },
      {
        "name": "title",
        "type": { "name": "标注点名" },
        "defaultValue": "String",
        "desc": ["否"],
        "since": "点击时显示，callout存在时将被忽略",
        "enum": []
      },
      {
        "name": "iconPath",
        "type": { "name": "显示的图标" },
        "defaultValue": "String",
        "desc": ["是"],
        "since": "项目目录下的图片路径，支持相对路径写法，以'/'开头则表示相对小程序根目录；也支持临时路径",
        "enum": []
      },
      {
        "name": "rotate",
        "type": { "name": "旋转角度" },
        "defaultValue": "Number",
        "desc": ["否"],
        "since": "顺时针旋转的角度，范围 0 ~ 360，默认为 0",
        "enum": []
      },
      {
        "name": "alpha",
        "type": { "name": "标注的透明度" },
        "defaultValue": "Number",
        "desc": ["否"],
        "since": "默认1，无透明，范围 0 ~ 1",
        "enum": []
      },
      {
        "name": "width",
        "type": { "name": "标注图标宽度" },
        "defaultValue": "Number",
        "desc": ["否"],
        "since": "默认为图片实际宽度",
        "enum": []
      },
      {
        "name": "height",
        "type": { "name": "标注图标高度" },
        "defaultValue": "Number",
        "desc": ["否"],
        "since": "默认为图片实际高度",
        "enum": []
      },
      {
        "name": "callout",
        "type": { "name": "自定义标记点上方的气泡窗口" },
        "defaultValue": "Object",
        "desc": ["否"],
        "since": "支持的属性见下表，可识别换行符。",
        "enum": []
      },
      {
        "name": "label",
        "type": { "name": "为标记点旁边增加标签" },
        "defaultValue": "Object",
        "desc": ["否"],
        "since": "支持的属性见下表，可识别换行符。",
        "enum": []
      },
      {
        "name": "anchor",
        "type": { "name": "经纬度在标注图标的锚点，默认底边中点" },
        "defaultValue": "Object",
        "desc": ["否"],
        "since": "{x, y}，x表示横向(0-1)，y表示竖向(0-1)。{x: .5, y: 1} 表示底边中点",
        "enum": []
      },
      {
        "name": "clusterId",
        "type": { "name": "自定义点聚合簇效果时使用" },
        "defaultValue": "Number",
        "desc": ["否"],
        "since": "",
        "enum": []
      },
      {
        "name": "customCallout",
        "type": { "name": "自定义气泡窗口" },
        "defaultValue": "Object",
        "desc": ["否"],
        "since": "",
        "enum": []
      },
      {
        "name": "aria-label",
        "type": { "name": "无障碍访问，（属性）元素的额外描述" },
        "defaultValue": "String",
        "desc": ["否"],
        "since": "",
        "enum": []
      },
      {
        "name": "content",
        "type": { "name": "文本" },
        "defaultValue": "String",
        "desc": [""],
        "enum": []
      },
      {
        "name": "color",
        "type": { "name": "文本颜色" },
        "defaultValue": "String",
        "desc": ["App-nvue 2.1.5+、微信小程序、H5、百度小程序"],
        "enum": []
      },
      {
        "name": "fontSize",
        "type": { "name": "文字大小" },
        "defaultValue": "Number",
        "desc": ["App-nvue 2.1.5+、微信小程序、H5、百度小程序"],
        "enum": []
      },
      {
        "name": "borderRadius",
        "type": { "name": "callout边框圆角" },
        "defaultValue": "Number",
        "desc": ["App-nvue 2.1.5+、微信小程序、H5、百度小程序"],
        "enum": []
      },
      {
        "name": "bgColor",
        "type": { "name": "背景色" },
        "defaultValue": "String",
        "desc": ["App-nvue 2.1.5+、微信小程序、H5、百度小程序"],
        "enum": []
      },
      {
        "name": "padding",
        "type": { "name": "文本边缘留白" },
        "defaultValue": "Number",
        "desc": ["App-nvue 2.1.5+、微信小程序、H5、百度小程序"],
        "enum": []
      },
      {
        "name": "display",
        "type": { "name": "'BYCLICK':点击显示; 'ALWAYS':常显" },
        "defaultValue": "String",
        "desc": ["App-nvue 2.1.5+、微信小程序、H5、百度小程序"],
        "enum": []
      },
      {
        "name": "textAlign",
        "type": { "name": "文本对齐方式。有效值: left, right, center" },
        "defaultValue": "String",
        "desc": ["App-nvue 2.1.5+、微信小程序、百度小程序"],
        "enum": []
      },
      {
        "name": "content",
        "type": { "name": "文本" },
        "defaultValue": "String",
        "desc": [""],
        "enum": []
      },
      {
        "name": "color",
        "type": { "name": "文本颜色" },
        "defaultValue": "String",
        "desc": ["App-nvue 2.1.5+、微信小程序、H5、百度小程序"],
        "enum": []
      },
      {
        "name": "fontSize",
        "type": { "name": "文字大小" },
        "defaultValue": "Number",
        "desc": ["App-nvue 2.1.5+、微信小程序、H5、百度小程序"],
        "enum": []
      },
      {
        "name": "x",
        "type": { "name": "label的坐标，原点是 marker 对应的经纬度" },
        "defaultValue": "Number",
        "desc": ["App-nvue 2.1.5+、微信小程序、H5、百度小程序"],
        "enum": []
      },
      {
        "name": "y",
        "type": { "name": "label的坐标，原点是 marker 对应的经纬度" },
        "defaultValue": "Number",
        "desc": ["App-nvue 2.1.5+、微信小程序、H5、百度小程序"],
        "enum": []
      },
      {
        "name": "borderWidth",
        "type": { "name": "边框宽度" },
        "defaultValue": "Number",
        "desc": ["微信小程序、百度小程序"],
        "enum": []
      },
      {
        "name": "borderColor",
        "type": { "name": "边框颜色" },
        "defaultValue": "String",
        "desc": ["微信小程序、百度小程序"],
        "enum": []
      },
      {
        "name": "borderRadius",
        "type": { "name": "边框圆角" },
        "defaultValue": "Number",
        "desc": ["App-nvue 2.1.5+、微信小程序、百度小程序"],
        "enum": []
      },
      {
        "name": "bgColor",
        "type": { "name": "背景色" },
        "defaultValue": "String",
        "desc": ["App-nvue 2.1.5+、微信小程序、百度小程序"],
        "enum": []
      },
      {
        "name": "padding",
        "type": { "name": "文本边缘留白" },
        "defaultValue": "Number",
        "desc": ["App-nvue 2.1.5+、微信小程序、百度小程序"],
        "enum": []
      },
      {
        "name": "textAlign",
        "type": { "name": "文本对齐方式。有效值: left, right, center" },
        "defaultValue": "String",
        "desc": ["App-nvue 2.1.5+、微信小程序、百度小程序"],
        "enum": []
      },
      {
        "name": "clusterId",
        "type": { "name": "自定义点聚合簇效果时使用" },
        "defaultValue": "Number",
        "desc": ["App-nvue 3.1.0+、微信小程序"],
        "enum": []
      },
      {
        "name": "customCallout",
        "type": { "name": "自定义气泡窗口" },
        "defaultValue": "Object",
        "desc": ["App暂时不支持、微信小程序"],
        "enum": []
      },
      {
        "name": "aria-label",
        "type": { "name": "无障碍访问，（属性）元素的额外描述" },
        "defaultValue": "String",
        "desc": ["App-nvue 3.1.0+、微信小程序"],
        "enum": []
      },
      {
        "name": "points",
        "type": { "name": "经纬度数组" },
        "defaultValue": "Array",
        "desc": ["是"],
        "since": "[{latitude: 0, longitude: 0}]",
        "enum": []
      },
      {
        "name": "color",
        "type": { "name": "线的颜色" },
        "defaultValue": "String",
        "desc": ["否"],
        "since": "8位十六进制表示，后两位表示alpha值，如：#0000AA",
        "enum": []
      },
      {
        "name": "width",
        "type": { "name": "线的宽度" },
        "defaultValue": "Number",
        "desc": ["否"],
        "since": "",
        "enum": []
      },
      {
        "name": "dottedLine",
        "type": { "name": "是否虚线" },
        "defaultValue": "Boolean",
        "desc": ["否"],
        "since": "默认false",
        "enum": []
      },
      {
        "name": "arrowLine",
        "type": { "name": "带箭头的线" },
        "defaultValue": "Boolean",
        "desc": ["否"],
        "since": "默认false，微信小程序开发者工具暂不支持该属性",
        "enum": []
      },
      {
        "name": "arrowIconPath",
        "type": { "name": "更换箭头图标" },
        "defaultValue": "String",
        "desc": ["否"],
        "since": "在arrowLine为true时生效",
        "enum": []
      },
      {
        "name": "borderColor",
        "type": { "name": "线的边框颜色" },
        "defaultValue": "String",
        "desc": ["否"],
        "since": "",
        "enum": []
      },
      {
        "name": "borderWidth",
        "type": { "name": "线的厚度" },
        "defaultValue": "Number",
        "desc": ["否"],
        "since": "",
        "enum": []
      },
      {
        "name": "colorList",
        "type": { "name": "彩虹线" },
        "defaultValue": "Array",
        "desc": ["false"],
        "since": "存在时忽略 color 值",
        "enum": []
      },
      {
        "name": "level",
        "type": { "name": "压盖关系，默认为 abovelabels" },
        "defaultValue": "String",
        "desc": ["false"],
        "since": "",
        "enum": []
      },
      {
        "name": "points",
        "type": { "name": "经纬度数组" },
        "defaultValue": "array",
        "desc": ["是"],
        "since": "[{latitude: 0, longitude: 0}]",
        "enum": []
      },
      {
        "name": "strokeWidth",
        "type": { "name": "描边的宽度" },
        "defaultValue": "Number",
        "desc": ["否"],
        "since": "",
        "enum": []
      },
      {
        "name": "strokeColor",
        "type": { "name": "描边的颜色" },
        "defaultValue": "String",
        "desc": ["否"],
        "since": "十六进制",
        "enum": []
      },
      {
        "name": "fillColor",
        "type": { "name": "填充颜色" },
        "defaultValue": "String",
        "desc": ["否"],
        "since": "十六进制",
        "enum": []
      },
      {
        "name": "zIndex",
        "type": { "name": "设置多边形 Z 轴数值" },
        "defaultValue": "Number",
        "desc": ["否"],
        "since": "",
        "enum": []
      },
      {
        "name": "level",
        "type": { "name": "压盖关系，默认为 abovelabels" },
        "defaultValue": "String",
        "desc": ["false"],
        "since": "App不支持（**需SDK提供支持**）、微信小程序",
        "enum": []
      },
      {
        "name": "latitude",
        "type": { "name": "纬度" },
        "defaultValue": "Number",
        "desc": ["是"],
        "since": "浮点数，范围 -90 ~ 90",
        "enum": []
      },
      {
        "name": "longitude",
        "type": { "name": "经度" },
        "defaultValue": "Number",
        "desc": ["是"],
        "since": "浮点数，范围 -180 ~ 180",
        "enum": []
      },
      {
        "name": "color",
        "type": { "name": "描边的颜色" },
        "defaultValue": "String",
        "desc": ["否"],
        "since": "8位十六进制表示，后两位表示alpha值，如：#0000AA",
        "enum": []
      },
      {
        "name": "fillColor",
        "type": { "name": "填充颜色" },
        "defaultValue": "String",
        "desc": ["否"],
        "since": "8位十六进制表示，后两位表示alpha值，如：#0000AA",
        "enum": []
      },
      {
        "name": "radius",
        "type": { "name": "半径" },
        "defaultValue": "Number",
        "desc": ["是"],
        "since": "",
        "enum": []
      },
      {
        "name": "strokeWidth",
        "type": { "name": "描边的宽度" },
        "defaultValue": "Number",
        "desc": ["否"],
        "since": "&nbsp;",
        "enum": []
      },
      {
        "name": "level",
        "type": { "name": "压盖关系，默认为 abovelabels" },
        "defaultValue": "String",
        "desc": ["false"],
        "since": "App不支持（**需SDK提供支持**）、微信小程序",
        "enum": []
      },
      {
        "name": "id",
        "type": { "name": "控件id" },
        "defaultValue": "Number",
        "desc": ["否"],
        "since": "在控件点击事件回调会返回此id",
        "enum": []
      },
      {
        "name": "position",
        "type": { "name": "控件在地图的位置" },
        "defaultValue": "Object",
        "desc": ["是"],
        "since": "控件相对地图位置",
        "enum": []
      },
      {
        "name": "iconPath",
        "type": { "name": "显示的图标" },
        "defaultValue": "String",
        "desc": ["是"],
        "since": "项目目录下的图片路径，支持相对路径写法，以'/'开头则表示相对项目根目录；也支持临时路径",
        "enum": []
      },
      {
        "name": "clickable",
        "type": { "name": "是否可点击" },
        "defaultValue": "Boolean",
        "desc": ["否"],
        "since": "默认不可点击",
        "enum": []
      },
      {
        "name": "left",
        "type": { "name": "距离地图的左边界多远" },
        "defaultValue": "Number",
        "desc": ["否"],
        "since": "默认为0",
        "enum": []
      },
      {
        "name": "top",
        "type": { "name": "距离地图的上边界多远" },
        "defaultValue": "Number",
        "desc": ["否"],
        "since": "默认为0",
        "enum": []
      },
      {
        "name": "width",
        "type": { "name": "控件宽度" },
        "defaultValue": "Number",
        "desc": ["否"],
        "since": "默认为图片宽度",
        "enum": []
      },
      {
        "name": "height",
        "type": { "name": "控件高度" },
        "defaultValue": "Number",
        "desc": ["否"],
        "since": "默认为图片高度",
        "enum": []
      }
    ],
    "tips": [
      "`<map>` 组件的宽/高推荐写直接量，比如：750rpx，不要设置百分比值。",
      "`uni-app` 只支持 `gcj02` 坐标",
      "App平台 `layer-style` 属性需要在地图服务商后台创建，值设置为高德后台申请的字符串，[详情](https://developer.amap.com/api/android-sdk/guide/create-map/custom)",
      "小程序和app-vue中，`<map>` 组件是由引擎创建的原生组件，它的层级是最高的，不能通过 z-index 控制层级。在`<map>`上绘制内容，可使用组件自带的marker、controls等属性，也可以使用`<cover-view>`组件。App端还可以使用plus.nativeObj.view 或 subNVue 绘制原生内容，[参考](/component/native-component)。另外App端nvue文件不存在层级问题。从微信基础库2.8.3开始，支持map组件的同层渲染，不再有层级问题。",
      "App端nvue文件的map和小程序拉齐度更高。vue里的map则与plus.map功能一致，和小程序的地图略有差异。**App端使用map推荐使用nvue。**",
      "App端使用到本地图像的话，打包前需要设置资源为释放模式，在manifest文件内app-plus新增runmode节点，设置值为liberate。",
      "在涉及层级问题的小程序中和app-vue中，请勿在 scroll-view、swiper、picker-view、movable-view 中使用 `<map>` 组件。",
      "小程序和 app-vue 中，css 动画对 `<map>` 组件无效。",
      "map 组件使用的经纬度是国测局坐标，调用 uni.getLocation 接口需要指定 type 为 gcj02。",
      "`<map>` 组件在不同平台的底层引擎是不同的：H5、微信小程序为腾讯地图；App、支付宝小程序为高德地图；百度小程序、快应用为百度地图。app-vue也可以使用百度地图，在manifest中配置，打包后生效，但app-nvue只支持高德地图。另外选择地图、查看地图位置的API也仅支持高德地图。App端如无特殊必要，建议使用高德地图。",
      "map 组件默认的api是参考微信小程序的，如需要使用plus.map，可以通过`$getAppMap`获取原生地图对象，[详见](https://uniapp.dcloud.io/api/location/map)。注意nvue的map组件不是plus.map对象，无法使用`$getAppMap`",
      "H5 端获取定位信息，需要部署在 **https** 服务上，本地预览（localhost）仍然可以使用 http 协议。",
      "无GPS模块或GPS无信号的 PC 设备使用 Chrome 浏览器的时候，位置信息是连接谷歌服务器获取的，国内用户可能获取位置信息失败。",
      "App 端使用地图组件需要**向高德或百度等三方服务商申请SDK资质，获取AppKey，打包时需要在manifest文件中勾选相应模块，在SDK配置中填写Appkey。注意申请包名和打包时的包名需匹配一致，证书信息匹配**。在manifest可视化界面有详细申请指南。",
      "H5 端使用地图和定位相关需要在[腾讯地图开放平台](https://lbs.qq.com/dev/console/key/manage)申请密钥，填写在 [manifest.json](https://uniapp.dcloud.io/collocation/manifest?id=h5sdkconfig) 中。",
      "ios nvue Color 不支持 ARGB 十六进制，使用 rgba(r,g,b,a) 代替"
    ]
  },
  {
    "name": "match-media",
    "desc": ["media query 匹配检测节点。"],
    "attrs": [
      {
        "name": "min-width",
        "type": { "name": "number" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "页面最小宽度（ px 为单位）",
        "enum": []
      },
      {
        "name": "max-width",
        "type": { "name": "number" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "页面最大宽度（ px 为单位）",
        "enum": []
      },
      {
        "name": "width",
        "type": { "name": "number" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "页面宽度（ px 为单位）",
        "enum": []
      },
      {
        "name": "min-height",
        "type": { "name": "number" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "页面最小高度（ px 为单位）",
        "enum": []
      },
      {
        "name": "max-height",
        "type": { "name": "number" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "页面最大高度（ px 为单位）",
        "enum": []
      },
      {
        "name": "height",
        "type": { "name": "number" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "页面高度（ px 为单位）",
        "enum": []
      },
      {
        "name": "orientation",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "屏幕方向（ landscape 或 portrait ）",
        "enum": []
      }
    ],
    "tips": []
  },
  {
    "name": "movable-area",
    "desc": ["可拖动区域"],
    "attrs": [
      {
        "name": "scale-area",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": [
          "当里面的 movable-view 设置为支持双指缩放时，设置此值可将缩放手势生效区域修改为整个 movable-area"
        ],
        "enum": []
      },
      {
        "name": "direction",
        "type": { "name": "String" },
        "defaultValue": "none",
        "desc": [
          "movable-view的移动方向，属性值有all、vertical、horizontal、none"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "inertia",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["movable-view是否带有惯性"],
        "since": "微信小程序、支付宝小程序、App、H5、百度小程序",
        "enum": []
      },
      {
        "name": "out-of-bounds",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["超过可移动区域后，movable-view是否还可以移动"],
        "since": "微信小程序、支付宝小程序、App、H5、百度小程序",
        "enum": []
      },
      {
        "name": "x",
        "type": { "name": "Number / String" },
        "defaultValue": "",
        "desc": [
          "定义x轴方向的偏移，如果x的值不在可移动范围内，会自动移动到可移动范围；改变x的值会触发动画"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "y",
        "type": { "name": "Number / String" },
        "defaultValue": "",
        "desc": [
          "定义y轴方向的偏移，如果y的值不在可移动范围内，会自动移动到可移动范围；改变y的值会触发动画"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "damping",
        "type": { "name": "Number" },
        "defaultValue": "20",
        "desc": [
          "阻尼系数，用于控制x或y改变时的动画和过界回弹的动画，值越大移动越快"
        ],
        "since": "微信小程序、支付宝小程序、App、H5、百度小程序",
        "enum": []
      },
      {
        "name": "friction",
        "type": { "name": "Number" },
        "defaultValue": "2",
        "desc": [
          "摩擦系数，用于控制惯性滑动的动画，值越大摩擦力越大，滑动越快停止；必须大于0，否则会被设置成默认值"
        ],
        "since": "微信小程序、支付宝小程序、App、H5、百度小程序",
        "enum": []
      },
      {
        "name": "disabled",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否禁用"],
        "since": "",
        "enum": []
      },
      {
        "name": "scale",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否支持双指缩放，默认缩放手势生效区域是在movable-view内"],
        "since": "微信小程序、支付宝小程序、App、H5",
        "enum": []
      },
      {
        "name": "scale-min",
        "type": { "name": "Number" },
        "defaultValue": "0.5",
        "desc": ["定义缩放倍数最小值"],
        "since": "微信小程序、支付宝小程序、App、H5",
        "enum": []
      },
      {
        "name": "scale-max",
        "type": { "name": "Number" },
        "defaultValue": "10",
        "desc": ["定义缩放倍数最大值"],
        "since": "微信小程序、支付宝小程序、App、H5",
        "enum": []
      },
      {
        "name": "scale-value",
        "type": { "name": "Number" },
        "defaultValue": "1",
        "desc": ["定义缩放倍数，取值范围为 0.5 - 10"],
        "since": "微信小程序、支付宝小程序、App、H5",
        "enum": []
      },
      {
        "name": "animation",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["是否使用动画"],
        "since": "微信小程序、支付宝小程序、App、H5、百度小程序",
        "enum": []
      },
      {
        "name": "change",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "拖动过程中触发的事件，event.detail = {x: x, y: y, source: source}，其中source表示产生移动的原因，值可为touch（拖动）、touch-out-of-bounds（超出移动范围）、out-of-bounds（超出移动范围后的回弹）、friction（惯性）和空字符串（setData）"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "scale",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "缩放过程中触发的事件，event.detail = {x: x, y: y, scale: scale}，"
        ],
        "since": "微信小程序、App、H5、百度小程序",
        "enum": []
      }
    ],
    "tips": [
      "movable-area app-nvue平台 暂不支持手势缩放，并且和滚动冲突。",
      "movable-view必须在`<movable-area/>`组件中，并且必须是直接子节点，否则不能移动。",
      "如果遇到x、y、scale属性设置不生效的问题参考：[组件属性设置不生效解决办法](/vue-api?id=componentsolutions)",
      "除了H5端和app-nvue端，其他平台不支持内嵌video、map等原生组件。更新：微信基础库2.4.4起支持了原生组件在 scroll-view、swiper、movable-view 中的使用"
    ]
  },
  {
    "name": "配置小程序插件",
    "desc": [
      "小程序插件是可被添加到小程序内直接使用的功能组件，在不同的小程序内叫法可能略有区别。微信小程序、支付宝小程序中叫`插件`，百度小程序中叫`动态库`，方便起见，以下统一称为插件。"
    ],
    "attrs": [],
    "tips": [
      "[微信小程序插件](https://developers.weixin.qq.com/miniprogram/dev/framework/plugin/using.html)",
      "[支付宝小程序插件](https://opendocs.alipay.com/mini/plugin/plugin-usage)",
      "[百度小程序动态库](https://smartprogram.baidu.com/docs/develop/framework/dynamiclib_use/)",
      "仅能在这个分包内使用该插件；",
      "同一个插件不能被多个分包同时引用；",
      "不能从分包外的页面直接跳入分包内的插件页面，需要先跳入分包内的非插件页面、再跳入同一分包内的插件页面。",
      "某些插件可能会需要一些权限才能正常运行，请在`manifest.json`中的`mp-weixin`内配置`permission`[详见](https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#permission)",
      "微信开发工具提示 “插件版本不存在”，可能是插件开发文档示例代码中使用的版本已经不存在，请在声明插件处更改版本"
    ]
  },
  {
    "name": "原生组件说明",
    "desc": [
      "小程序和App的vue页面，主体是webview渲染的。为了提升性能，小程序和App的vue页面下部分ui元素，比如导航栏、tabbar、video、map使用了原生控件。这种方式被称为混合渲染。"
    ],
    "attrs": [],
    "tips": [
      "前端组件无法覆盖原生控件的层级问题",
      "原生组件不能嵌入特殊前端组件(如scroll-view)",
      "原生控件ui无法灵活自定义",
      "原生控件在Android上，字体会渲染为rom的主题字体，而webview如果不经过单独改造不会使用rom主题字体",
      "[map](/component/map)",
      "[video](/component/video)",
      "[camera](/component/camera)（仅微信小程序、百度小程序支持）",
      "[canvas](/component/canvas)（仅在微信小程序、百度小程序表现为原生组件）",
      "[input](/component/input)（仅在微信小程序、支付宝小程序、字节跳动小程序、QQ小程序中且input置焦时表现为原生组件，其中支付宝小程序的input仅为text且置焦时才表现为原生组件）",
      "[textarea](/component/textarea)（仅在微信小程序、百度小程序、字节跳动小程序表现为原生组件）",
      "[live-player](/component/live-player)（仅微信小程序、百度小程序支持，App端直接使用video组件可同时实现拉流）",
      "[live-pusher](/component/live-pusher)（仅微信小程序、百度小程序、app-nvue支持，app-vue使用plus.video.LivePusher可实现推流）",
      "[cover-view](/component/cover-view)",
      "[cover-image](/component/cover-view?id=cover-image)",
      "[ad](/component/ad) (仅app、微信小程序、百度小程序、字节跳动小程序、QQ小程序支持)",
      "原生组件的层级是**最高**的，所以页面中的其他组件无论设置 z-index 为多少，都无法盖在原生组件上。后插入的原生组件可以覆盖之前的原生组件。",
      "原生组件无法在 scroll-view、swiper、picker-view、movable-view 中使用。",
      "同层渲染支持：微信基础库2.4.4起支持了video的同层渲染、微信基础库2.8.3支持map的同层渲染。支持同层渲染后，相关组件的时候不再有层级问题，无需再使用cover-view覆盖，也可以内嵌入swiper等组件。app-nvue 不涉及层级问题，自然所有组件都是同层渲染。",
      "需要注意的是，微信原生组件的「同层渲染」能力可能会在特定情况下失效，一方面你需要在开发时稍加注意，另一方面同层渲染失败会触发 ``bindrendererror`` 事件，可在必要时根据该回调做好 UI 的回退。",
      "部分CSS样式无法应用于原生组件，例如：\n  * 无法对原生组件设置 CSS 动画；\n  * 无法定义原生组件为 position: fixed；\n  * 不能在父级节点使用 overflow: hidden 来裁剪原生组件的显示区域。",
      "在小程序端真机上，原生组件会遮挡 vConsole 弹出的调试面板。",
      "原生navigationBar和tabbar（pages.json里配置的）。",
      "web-view组件虽然不是原生的，但这个组件相当于一个原生webview覆盖在页面上，并且小程序上web-view组件是强制全屏的，无法在上面覆盖前端元素",
      "弹出框：picker、showModal、showToast、showLoading、showActionSheet、previewImage、chooseImage、chooseVideo等弹出元素也无法被前端组件覆盖",
      "plus下的plus.nativeObj.view、plus.video.LivePusher、plus.nativeUI、plus.webview，层级均高于前端元素",
      "[cover-view](https://uniapp.dcloud.io/component/cover-view?id=cover-view)",
      "[plus.nativeObj.view](https://www.html5plus.org/doc/zh_cn/nativeobj.html#plus.nativeObj.View)",
      "[subNVue](https://ask.dcloud.net.cn/article/35948)",
      "[弹出部分区域透明的nvue页面](https://ext.dcloud.net.cn/plugin?id=953)",
      "直接使用nvue。nvue是纯原生渲染，不存在webview渲染和原生字体不一致的问题。",
      "app端不使用系统webview，而是使用x5浏览器内核，x5是处理过的，可以跟随系统字体的。详见：[https://ask.dcloud.net.cn/article/36806](https://ask.dcloud.net.cn/article/36806)"
    ]
  },
  {
    "name": "navigation-bar",
    "desc": [
      "页面导航条配置节点，用于指定导航栏的一些属性。只能是 [page-meta](https://uniapp.dcloud.io/component/page-meta) 组件内的第一个节点，需要配合它一同使用。"
    ],
    "attrs": [
      {
        "name": "title",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "导航条标题",
        "enum": []
      },
      {
        "name": "title-icon",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "标题图标，图标路径如\"./img/t.png\"，仅支持本地文件路径， 相对路径，相对于当前页面的host位置，固定宽高为逻辑像素值\"34px\"。 要求图片的宽高相同。 注意：设置标题图标后标题将居左显示。",
        "enum": []
      },
      {
        "name": "title-icon-radius",
        "type": { "name": "string" },
        "defaultValue": "无圆角",
        "desc": ["否"],
        "since": "标题图标圆角，取值格式为\"XXpx\"，其中XX为像素值（逻辑像素），如\"10px\"表示10像素半径圆角。",
        "enum": []
      },
      {
        "name": "subtitle-text",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "副标题文字内容，设置副标后将显示两行标题，副标显示在主标题（titleText）下方。 注意：设置副标题后将居左显示",
        "enum": []
      },
      {
        "name": "subtitle-size",
        "type": { "name": "string" },
        "defaultValue": "\"auto\"",
        "desc": ["否"],
        "since": "副标题文字字体大小，字体大小单位为像素，如\"14px\"表示字体大小为14像素，默认值为12像素。",
        "enum": []
      },
      {
        "name": "subtitle-color",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "副标题文字颜色，颜色值格式为\"#RRGGBB\"和\"rgba(R,G,B,A)\"，如\"#FF0000\"表示标题文字颜色为红色。 默认值与主标题文字颜色一致",
        "enum": []
      },
      {
        "name": "subtitle-overflow",
        "type": { "name": "string" },
        "defaultValue": "\"ellipsis\"",
        "desc": ["否"],
        "since": "标题文字超出显示区域时处理方式，可取值： \"clip\" - 超出显示区域时内容裁剪； \"ellipsis\" - 超出显示区域时尾部显示省略标记（...）。",
        "enum": []
      },
      {
        "name": "title-align",
        "type": { "name": "string" },
        "defaultValue": "\"auto\"",
        "desc": ["否"],
        "since": "可取值： \"center\"-居中对齐； \"left\"-居左对齐； \"auto\"-根据平台自动选择（Android平台居左对齐，iOS平台居中对齐）",
        "enum": []
      },
      {
        "name": "background-image",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "支持以下类型： 背景图片路径 - 如\"./img/t.png\"，仅支持本地文件路径， 相对路径，相对于当前页面的host位置，根据实际标题栏宽高拉伸绘制； 渐变色 - 仅支持线性渐变，两种颜色的渐变，如“linear-gradient(to top, #a80077, #66ff00)”， 其中第一个参数为渐变方向，可取值： \"to right\"表示从左向右渐变， “to left\"表示从右向左渐变， “to bottom\"表示从上到下渐变， “to top\"表示从下到上渐变， “to bottom right\"表示从左上角到右下角， “to top left\"表示从右下角到左上角",
        "enum": []
      },
      {
        "name": "background-repeat",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "仅在backgroundImage设置为图片路径时有效。 可取值： \"repeat\" - 背景图片在垂直方向和水平方向平铺； \"repeat-x\" - 背景图片在水平方向平铺，垂直方向拉伸； “repeat-y” - 背景图片在垂直方向平铺，水平方向拉伸； “no-repeat” - 背景图片在垂直方向和水平方向都拉伸。 默认使用 “no-repeat\"",
        "enum": []
      },
      {
        "name": "blur-effect",
        "type": { "name": "string" },
        "defaultValue": "\"none\"",
        "desc": ["否"],
        "since": "此效果将会高斯模糊显示标题栏后的内容，仅在type为\"transparent\"或\"float\"时有效。 可取值： \"dark\" - 暗风格模糊，对应iOS原生UIBlurEffectStyleDark效果； \"extralight\" - 高亮风格模糊，对应iOS原生UIBlurEffectStyleExtraLight效果； \"light\" - 亮风格模糊，对应iOS原生UIBlurEffectStyleLight效果； \"none\" - 无模糊效果。 注意：使用模糊效果时应避免设置背景颜色，设置背景颜色可能覆盖模糊效果。",
        "enum": []
      },
      {
        "name": "loading",
        "type": { "name": "string" },
        "defaultValue": "false",
        "desc": ["否"],
        "since": "是否在导航条显示 loading 加载提示",
        "enum": []
      },
      {
        "name": "front-color",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "导航条前景颜色值，包括按钮、标题、状态栏的颜色，仅支持 #ffffff 和 #000000",
        "enum": []
      },
      {
        "name": "background-color",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "导航条背景颜色值，有效值为十六进制颜色",
        "enum": []
      },
      {
        "name": "color-animation-duration",
        "type": { "name": "number" },
        "defaultValue": "0",
        "desc": ["否"],
        "since": "改变导航栏颜色时的动画时长，默认为 0 （即没有动画效果）",
        "enum": []
      },
      {
        "name": "color-animation-timing-func",
        "type": { "name": "string" },
        "defaultValue": "\"linear\"",
        "desc": ["否"],
        "since": "改变导航栏颜色时的动画方式，支持 linear 、 easeIn 、 easeOut 和 easeInOut",
        "enum": []
      }
    ],
    "tips": [
      "`navigation-bar` 目前支持的配置仅为上表所列，并不支持 page.json 中关于导航栏的所有配置",
      "`navigation-bar` 与 pages.json 的设置相冲突时，会覆盖 page.json 的配置"
    ]
  },
  {
    "name": "navigator",
    "desc": ["页面跳转。"],
    "attrs": [
      {
        "name": "url",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "应用内的跳转链接，值为相对路径或绝对路径，如：\"../first/first\"，\"/pages/first/first\"，注意不能加 ``.vue`` 后缀"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "open-type",
        "type": { "name": "String" },
        "defaultValue": "navigate",
        "desc": ["跳转方式"],
        "since": "",
        "enum": [
          { "value": "navigate", "desc": "对应 uni.navigateTo 的功能" },
          { "value": "redirect", "desc": "对应 uni.redirectTo 的功能" },
          { "value": "switchTab", "desc": "对应 uni.switchTab 的功能" },
          { "value": "reLaunch", "desc": "对应 uni.reLaunch 的功能" },
          { "value": "navigateBack", "desc": "对应 uni.navigateBack 的功能" },
          {
            "value": "exit",
            "desc": "退出小程序，target=\"miniProgram\"时生效"
          }
        ]
      },
      {
        "name": "delta",
        "type": { "name": "Number" },
        "defaultValue": "",
        "desc": ["当 open-type 为 'navigateBack' 时有效，表示回退的层数"],
        "since": "",
        "enum": []
      },
      {
        "name": "animation-type",
        "type": { "name": "String" },
        "defaultValue": "pop-in/out",
        "desc": [
          "当 open-type 为 navigate、navigateBack 时有效，窗口的显示/关闭动画效果，详见：[窗口动画](api/router?id=animation)"
        ],
        "since": "App",
        "enum": []
      },
      {
        "name": "animation-duration",
        "type": { "name": "Number" },
        "defaultValue": "300",
        "desc": [
          "当 open-type 为 navigate、navigateBack 时有效，窗口显示/关闭动画的持续时间。"
        ],
        "since": "App",
        "enum": []
      },
      {
        "name": "hover-class",
        "type": { "name": "String" },
        "defaultValue": "navigator-hover",
        "desc": [
          "指定点击时的样式类，当hover-class=\"none\"时，没有点击态效果"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "hover-stop-propagation",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["指定是否阻止本节点的祖先节点出现点击态"],
        "since": "微信小程序",
        "enum": []
      },
      {
        "name": "hover-start-time",
        "type": { "name": "Number" },
        "defaultValue": "50",
        "desc": ["按住后多久出现点击态，单位毫秒"],
        "since": "",
        "enum": []
      },
      {
        "name": "hover-stay-time",
        "type": { "name": "Number" },
        "defaultValue": "600",
        "desc": ["手指松开后点击态保留时间，单位毫秒"],
        "since": "&nbsp;",
        "enum": []
      },
      {
        "name": "target",
        "type": { "name": "String" },
        "defaultValue": "self",
        "desc": [
          "在哪个小程序目标上发生跳转，默认当前小程序，值域self/miniProgram"
        ],
        "since": "微信2.0.7+、百度2.5.2+、QQ",
        "enum": []
      }
    ],
    "tips": [
      "跳转tabbar页面，必须设置open-type=\"switchTab\"",
      "navigator-hover 默认为 {background-color: rgba(0, 0, 0, 0.1); opacity: 0.7;}, ``<navigator>`` 的子节点背景色应为透明色。",
      "navigator-`open-type`属性 如果使用对应的值，则对应值的功能会高于对应跳转路径。",
      "app-nvue 平台只有纯nvue项目（render为native）才支持 `<navigator>`。非render为native的情况下，nvue暂不支持navigator组件，请使用API跳转。",
      "app下退出应用，Android平台可以使用[plus.runtime.quit](https://www.html5plus.org/doc/zh_cn/runtime.html#plus.runtime.quit)。iOS没有退出应用的概念。",
      "[uLink组件](https://ext.dcloud.net.cn/plugin?id=1182)是navigator组件的增强版，样式上自带下划线，功能上支持打开在线网页、其他App的schema、mailto发邮件、tel打电话。"
    ]
  },
  {
    "name": "official-account",
    "desc": [
      "微信公众号关注组件。当用户扫小程序码打开小程序时，开发者可在小程序内配置公众号关注组件，方便用户快捷关注公众号，可嵌套在原生组件内。"
    ],
    "attrs": [],
    "tips": []
  },
  {
    "name": "open-data",
    "desc": ["用于展示平台开放的数据。"],
    "attrs": [
      {
        "name": "type",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["开放数据类型"],
        "since": "",
        "enum": [
          { "value": "userNickName", "desc": "用户昵称" },
          { "value": "userAvatarUrl", "desc": "用户头像" },
          { "value": "userGender", "desc": "用户性别" },
          { "value": "groupName", "desc": "拉取群名称" },
          { "value": "userCity", "desc": "用户所在城市" },
          { "value": "userProvince", "desc": "用户所在省份" },
          { "value": "userCountry", "desc": "用户所在国家" },
          { "value": "userLanguage", "desc": "用户的语言" }
        ]
      },
      {
        "name": "open-gid",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["当 type=\"groupName\" 时生效, 群id"],
        "since": "微信小程序、QQ小程序",
        "enum": []
      },
      {
        "name": "lang",
        "type": { "name": "String" },
        "defaultValue": "en",
        "desc": [
          "当 type=\"user*\" 时生效，以哪种语言展示 userInfo，有效值有：en, zh_CN, zh_TW"
        ],
        "since": "微信小程序、QQ小程序",
        "enum": []
      }
    ],
    "tips": []
  },
  {
    "name": "page-meta",
    "desc": [
      "页面属性配置节点，用于指定页面的一些属性、监听页面事件。可部分替代pages.json的功能。"
    ],
    "attrs": [
      {
        "name": "background-text-style",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "下拉背景字体、loading 图的样式，仅支持 dark 和 light",
        "enum": []
      },
      {
        "name": "background-color",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "窗口的背景色，必须为十六进制颜色值",
        "enum": []
      },
      {
        "name": "background-color-top",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "顶部窗口的背景色，必须为十六进制颜色值，仅 iOS 支持",
        "enum": []
      },
      {
        "name": "background-color-bottom",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "底部窗口的背景色，必须为十六进制颜色值，仅 iOS 支持",
        "enum": []
      },
      {
        "name": "scroll-top",
        "type": { "name": "string" },
        "defaultValue": "\"\"",
        "desc": ["否"],
        "since": "滚动位置，可以使用 px 或者 rpx 为单位，在被设置时，页面会滚动到对应位置",
        "enum": []
      },
      {
        "name": "scroll-duration",
        "type": { "name": "number" },
        "defaultValue": "300",
        "desc": ["否"],
        "since": "滚动动画时长",
        "enum": []
      },
      {
        "name": "page-style",
        "type": { "name": "string" },
        "defaultValue": "\"\"",
        "desc": ["否"],
        "since": "页面根节点样式，页面根节点是所有页面节点的祖先节点，相当于 HTML 中的 body 节点",
        "enum": []
      },
      {
        "name": "root-font-size",
        "type": { "name": "string" },
        "defaultValue": "\"\"",
        "desc": ["否"],
        "since": "页面的根字体大小，页面中的所有 rem 单位，将使用这个字体大小作为参考值，即 1rem 等于这个字体大小",
        "enum": []
      },
      {
        "name": "enable-pull-down-refresh",
        "type": { "name": "Boolean" },
        "defaultValue": "\"\"",
        "desc": ["否"],
        "since": "是否开启下拉刷新",
        "enum": []
      },
      {
        "name": "resize",
        "type": { "name": "eventhandle" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "页面尺寸变化时会触发 resize 事件， event.detail = { size: { windowWidth, windowHeight } }",
        "enum": []
      },
      {
        "name": "scroll",
        "type": { "name": "eventhandle" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "页面滚动时会触发 scroll 事件， event.detail = { scrollTop }",
        "enum": []
      },
      {
        "name": "scrolldone",
        "type": { "name": "eventhandle" },
        "defaultValue": "",
        "desc": ["否"],
        "since": "如果通过改变 scroll-top 属性来使页面滚动，页面滚动结束后会触发 scrolldone 事件",
        "enum": []
      }
    ],
    "tips": [
      "`<page-meta>` 目前支持的配置仅为上表所列，并不支持所有 page.json 的配置",
      "`<page-meta>` 与 pages.json 的设置相冲突时，会覆盖 page.json 的配置"
    ]
  },
  {
    "name": "picker-view",
    "desc": ["嵌入页面的滚动选择器。"],
    "attrs": [
      {
        "name": "value",
        "type": { "name": "Array＜Number＞" },
        "defaultValue": "数组中的数字依次表示 picker-view 内的 picker-view-column 选择的第几项（下标从 0 开始），数字大于 picker-view-column 可选项长度时，选择最后一项。",
        "desc": [""],
        "enum": []
      },
      {
        "name": "indicator-style",
        "type": { "name": "String" },
        "defaultValue": "设置选择器中间选中框的样式",
        "desc": [""],
        "enum": []
      },
      {
        "name": "indicator-class",
        "type": { "name": "String" },
        "defaultValue": "设置选择器中间选中框的类名，注意页面或组件的style中写了scoped时，需要在类名前写/deep/",
        "desc": ["app-nvue和字节跳动小程序不支持"],
        "enum": []
      },
      {
        "name": "mask-style",
        "type": { "name": "String" },
        "defaultValue": "设置蒙层的样式",
        "desc": [""],
        "enum": []
      },
      {
        "name": "mask-class",
        "type": { "name": "String" },
        "defaultValue": "设置蒙层的类名",
        "desc": ["app-nvue和字节跳动小程序不支持"],
        "enum": []
      },
      {
        "name": "change",
        "type": { "name": "EventHandle" },
        "defaultValue": "当滚动选择，value 改变时触发 change 事件，event.detail = {value: value}；value为数组，表示 picker-view 内的 picker-view-column 当前选择的是第几项（下标从 0 开始）",
        "desc": ["&nbsp;"],
        "enum": []
      },
      {
        "name": "pickstart",
        "type": { "name": "eventhandle" },
        "defaultValue": "",
        "desc": ["当滚动选择开始时候触发事件"],
        "enum": []
      },
      {
        "name": "pickend",
        "type": { "name": "eventhandle" },
        "defaultValue": "",
        "desc": ["当滚动选择结束时候触发事件"],
        "enum": []
      }
    ],
    "tips": [
      "微信小程序端，滚动时在iOS自带振动反馈，可在系统设置 -> 声音与触感 -> 系统触感反馈中关闭",
      "在2.6.3版本以前，如果需要在PC端使用`picker-view`，需配置[H5模版](https://uniapp.dcloud.io/collocation/manifest?id=h5-template)，并引入[touch-emulator.js](https://github.com/dcloudio/touchemulator)",
      "uni ui提供了增强版`<uni-data-picker>`组件，详见：[https://ext.dcloud.net.cn/plugin?id=3796](https://ext.dcloud.net.cn/plugin?id=3796)"
    ]
  },
  {
    "name": "picker",
    "desc": [
      "从底部弹起的滚动选择器。支持五种选择器，通过mode来区分，分别是普通选择器，多列选择器，时间选择器，日期选择器，省市区选择器，默认是普通选择器。"
    ],
    "attrs": [
      {
        "name": "range",
        "type": { "name": "Array / Array＜Object＞" },
        "defaultValue": "[]",
        "desc": ["mode为 selector 或 multiSelector 时，range 有效"],
        "since": "",
        "enum": []
      },
      {
        "name": "range-key",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "当 range 是一个 Array＜Object＞ 时，通过 range-key 来指定 Object 中 key 的值作为选择器显示内容"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "value",
        "type": { "name": "Number" },
        "defaultValue": "0",
        "desc": ["value 的值表示选择了 range 中的第几个（下标从 0 开始）"],
        "since": "",
        "enum": []
      },
      {
        "name": "selector-type",
        "type": { "name": "String" },
        "defaultValue": "auto",
        "desc": [
          "大屏时UI类型，支持 picker、select、auto，默认在 iPad 以 picker 样式展示而在 PC 以 select 样式展示"
        ],
        "since": "H5 2.9.9+",
        "enum": []
      },
      {
        "name": "change",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["value 改变时触发 change 事件，event.detail = {value: value}"],
        "since": "",
        "enum": []
      },
      {
        "name": "disabled",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否禁用"],
        "since": "",
        "enum": []
      },
      {
        "name": "cancel",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["取消选择或点遮罩层收起 picker 时触发"],
        "since": "",
        "enum": []
      },
      {
        "name": "range",
        "type": { "name": "二维 Array / 二维 Array＜Object＞" },
        "defaultValue": "[]",
        "desc": [
          "mode为 selector 或 multiSelector 时，range 有效。二维数组，长度表示多少列，数组的每项表示每列的数据，如[[\"a\",\"b\"], [\"c\",\"d\"]]"
        ],
        "enum": []
      },
      {
        "name": "range-key",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "当 range 是一个二维 Array＜Object＞ 时，通过 range-key 来指定 Object 中 key 的值作为选择器显示内容"
        ],
        "enum": []
      },
      {
        "name": "value",
        "type": { "name": "Array" },
        "defaultValue": "[]",
        "desc": [
          "value 每一项的值表示选择了 range 对应项中的第几个（下标从 0 开始）"
        ],
        "enum": []
      },
      {
        "name": "change",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["value 改变时触发 change 事件，event.detail = {value: value}"],
        "enum": []
      },
      {
        "name": "columnchange",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "某一列的值改变时触发 columnchange 事件，event.detail = {column: column, value: value}，column 的值表示改变了第几列（下标从0开始），value 的值表示变更值的下标"
        ],
        "enum": []
      },
      {
        "name": "cancel",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["取消选择时触发"],
        "enum": []
      },
      {
        "name": "disabled",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否禁用"],
        "enum": []
      },
      {
        "name": "value",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["表示选中的时间，格式为\"hh:mm\""],
        "since": "",
        "enum": []
      },
      {
        "name": "start",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["表示有效时间范围的开始，字符串格式为\"hh:mm\""],
        "since": "App 不支持",
        "enum": []
      },
      {
        "name": "end",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["表示有效时间范围的结束，字符串格式为\"hh:mm\""],
        "since": "App 不支持",
        "enum": []
      },
      {
        "name": "change",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["value 改变时触发 change 事件，event.detail = {value: value}"],
        "since": "",
        "enum": []
      },
      {
        "name": "cancel",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["取消选择时触发"],
        "since": "",
        "enum": []
      },
      {
        "name": "disabled",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否禁用"],
        "since": "&nbsp;",
        "enum": []
      },
      {
        "name": "value",
        "type": { "name": "String" },
        "defaultValue": "0",
        "desc": ["表示选中的日期，格式为\"YYYY-MM-DD\""],
        "since": "",
        "enum": []
      },
      {
        "name": "start",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["表示有效日期范围的开始，字符串格式为\"YYYY-MM-DD\""],
        "since": "",
        "enum": []
      },
      {
        "name": "end",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["表示有效日期范围的结束，字符串格式为\"YYYY-MM-DD\""],
        "since": "",
        "enum": []
      },
      {
        "name": "fields",
        "type": { "name": "String" },
        "defaultValue": "day",
        "desc": [
          "有效值 year、month、day，表示选择器的粒度，默认为 day，App 端未配置此项时使用系统 UI"
        ],
        "since": "H5、App 2.6.3+、微信小程序、百度小程序、字节跳动小程序",
        "enum": [
          { "value": "year", "desc": "选择器粒度为年" },
          { "value": "month", "desc": "选择器粒度为月份" },
          { "value": "day", "desc": "选择器粒度为天" }
        ]
      },
      {
        "name": "change",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["value 改变时触发 change 事件，event.detail = {value: value}"],
        "since": "",
        "enum": []
      },
      {
        "name": "cancel",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["取消选择时触发"],
        "since": "",
        "enum": []
      },
      {
        "name": "disabled",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否禁用"],
        "since": "&nbsp;",
        "enum": []
      },
      {
        "name": "value",
        "type": { "name": "Array" },
        "defaultValue": "[]",
        "desc": ["表示选中的省市区，默认选中每一列的第一个值"],
        "enum": []
      },
      {
        "name": "custom-item",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["可为每一列的顶部添加一个自定义的项"],
        "enum": []
      },
      {
        "name": "change",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["value 改变时触发 change 事件，event.detail = {value: value}"],
        "enum": []
      },
      {
        "name": "cancel",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["取消选择时触发"],
        "enum": []
      },
      {
        "name": "disabled",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否禁用"],
        "enum": []
      }
    ],
    "tips": [
      "picker在各平台的实现是有UI差异的，有的平台如百度、支付宝小程序的Android端是从中间弹出的；有的平台支持循环滚动如百度小程序；有的平台没有取消按钮如App-iOS端。但均不影响功能使用。",
      "由于 JavaScript 的限制 vue 不能观测如下方式设置 value：``this.value[0] = 0`` （[vue 注意事项](https://cn.vuejs.org/v2/guide/list.html#注意事项)），解决方式参考：[hello-uniapp 示例](https://github.com/dcloudio/hello-uniapp/commit/59264474172a591c865431d02a2a1e3583978827)",
      "微信开发工具的pc模拟器有可能出现拖动数据错乱，使用真机正常",
      "时间选择在App端调用的是os的原生时间选择控件，在不同平台有不同的ui表现",
      "小程序平台在引擎层面内置了省市区数据。但省市区包含大量数据，占用体积，并非所有应用都需要，且很多城市数据有自维护需求，所以在App和H5平台没有在前端内置这些数据。可以基于多列picker或picker-view，自行填充城市数据。插件市场有较多类似插件，[详见](https://ext.dcloud.net.cn/search?q=%E5%9F%8E%E5%B8%82%E9%80%89%E6%8B%A9)。注意基于多列picker方式的地区选择不能运行在支付宝小程序上，只有基于picker-view的可以全端运行。尤其推荐插件[uni-data-picker](https://ext.dcloud.net.cn/plugin?id=3796)，自带省市区的联网数据，自带懒加载。",
      "在picker内容还在滚动时或滚动回弹动画还未结束时，点确定关闭弹出的picker，数据无法及时更新。需等待一下，或手动触停滚动再点确定。所有平台均如此",
      "uni ui提供了增强版`<uni-data-picker>`组件，详见：[https://ext.dcloud.net.cn/plugin?id=3796](https://ext.dcloud.net.cn/plugin?id=3796)",
      "该组件优势如下：\n* 符合[datacom](/component/datacom)规范，只需传入data，就可以自动生成界面\n* 符合[uni-forms](https://ext.dcloud.net.cn/plugin?id=2773)，表单校验规范\n* 突破多列picker的3列限制，可以承载更多列数据\n* 选择区域面积更高更大\n* 支持多列数据分级加载，比如省市区选择，先选择省，然后动态联网加载该省的市。\n* uniCloud自带了[opendb](https://gitee.com/dcloud/opendb)表，[opendb-city-china](https://gitee.com/dcloud/opendb/tree/master/collection/opendb-city-china)，包括全国的省市区数据。在`<uni-data-picker>`组件上可直接绑定该数据，生成全端可用的、联网懒加载的省市区选择。\n* unicloud数据库提供了[DB Schema](https://uniapp.dcloud.io/uniCloud/schema)，还提供了[schema2code](https://uniapp.dcloud.net.cn/uniCloud/schema?id=autocode)自动生成全套表单页面，包括界面、校验逻辑、提交入库。在schema中配置字段的格式，比如在用户地址表[uni-id-address](https://gitee.com/dcloud/opendb/tree/master/collection/uni-id-address)的字段`area_code`配置值域指向[opendb-city-china](https://gitee.com/dcloud/opendb/tree/master/collection/opendb-city-china)表，即可自动生成该用户地址的生成页面"
    ]
  },
  {
    "name": "progress",
    "desc": ["进度条。"],
    "attrs": [
      {
        "name": "percent",
        "type": { "name": "Float" },
        "defaultValue": "无",
        "desc": ["百分比0~100"],
        "since": "",
        "enum": []
      },
      {
        "name": "show-info",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["在进度条右侧显示百分比"],
        "since": "",
        "enum": []
      },
      {
        "name": "border-radius",
        "type": { "name": "number/string" },
        "defaultValue": "0",
        "desc": ["圆角大小"],
        "since": "app-nvue、微信基础库2.3.1+、QQ小程序",
        "enum": []
      },
      {
        "name": "font-size",
        "type": { "name": "number/string" },
        "defaultValue": "16",
        "desc": ["右侧百分比字体大小"],
        "since": "app-nvue、微信基础库2.3.1+、QQ小程序",
        "enum": []
      },
      {
        "name": "stroke-width",
        "type": { "name": "Number" },
        "defaultValue": "6",
        "desc": ["进度条线的宽度，单位px"],
        "since": "",
        "enum": []
      },
      {
        "name": "activeColor",
        "type": { "name": "Color" },
        "defaultValue": "#09BB07（百度为#E6E6E6）",
        "desc": ["已选择的进度条的颜色"],
        "since": "",
        "enum": []
      },
      {
        "name": "backgroundColor",
        "type": { "name": "Color" },
        "defaultValue": "#EBEBEB",
        "desc": ["未选择的进度条的颜色"],
        "since": "",
        "enum": []
      },
      {
        "name": "active",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["进度条从左往右的动画"],
        "since": "",
        "enum": []
      },
      {
        "name": "active-mode",
        "type": { "name": "String" },
        "defaultValue": "backwards",
        "desc": ["backwards: 动画从头播；forwards：动画从上次结束点接着播"],
        "since": "App、H5、微信小程序、QQ小程序",
        "enum": []
      },
      {
        "name": "duration",
        "type": { "name": "number" },
        "defaultValue": "30",
        "desc": ["进度增加1%所需毫秒数"],
        "since": "App-nvue2.6.1+、微信基础库2.8.2+、H5 3.1.11+",
        "enum": []
      },
      {
        "name": "activeend",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["动画完成事件"],
        "since": "微信小程序",
        "enum": []
      }
    ],
    "tips": []
  },
  {
    "name": "radio-group",
    "desc": [
      "单项选择器，内部由多个 ``<radio>`` 组成。通过把多个`radio`包裹在一个`radio-group`下，实现这些`radio`的单选。"
    ],
    "attrs": [
      {
        "name": "change",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "``<radio-group>`` 中的选中项发生变化时触发 change 事件，event.detail = {value: 选中项radio的value}"
        ],
        "enum": []
      },
      {
        "name": "value",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "``<radio>`` 标识。当该 ``<radio>`` 选中时，``<radio-group>`` 的 change 事件会携带 ``<radio>`` 的 value"
        ],
        "enum": []
      },
      {
        "name": "checked",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["当前是否选中"],
        "enum": []
      },
      {
        "name": "disabled",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否禁用"],
        "enum": []
      },
      {
        "name": "color",
        "type": { "name": "Color" },
        "defaultValue": "",
        "desc": ["radio的颜色，同css的color"],
        "enum": []
      }
    ],
    "tips": [
      "radio的默认颜色，在不同平台不一样。微信小程序是绿色的，字节跳动小程序为红色，其他平台是蓝色的。更改颜色使用color属性。",
      "如需调节radio大小，可通过css的scale方法调节，如缩小到70%`style=\"transform:scale(0.7)\"`",
      "radio不是checkbox，点击一个已经选中的radio，不会将其取消选中",
      "uni-ui提供了增强的uni-data-checkbox组件，基于[datacom规范](/component/datacom)，只需传入data数据，即可自动生成一组单选框，使用方式更简洁，并且支持[uni-forms](https://ext.dcloud.net.cn/plugin?id=2773)的表单验证。uni-data-checkbox组件详见[https://ext.dcloud.net.cn/plugin?id=3456](https://ext.dcloud.net.cn/plugin?id=3456)"
    ]
  },
  {
    "name": "recycle-list",
    "desc": ["app端nvue专用组件。"],
    "attrs": [
      {
        "name": "case",
        "type": {
          "name": "声明了当前模板的类型，只有和数据中的类型与当前类型匹配时才会渲染，语义和编程语言里的 case 一致。所有模板中最多只会匹配到一项，按照模板的顺序从上到下匹配，一旦匹配成功就不在继续匹配下一个。"
        },
        "desc": [null],
        "enum": []
      },
      {
        "name": "default",
        "type": {
          "name": "表示当前模板为默认模板类型，不需要指定值。如果数据项没有匹配到任何 case 类型，则渲染带有 default 模板。如果存在多个 default，则只会使用第一个默认模板。"
        },
        "desc": [null],
        "enum": []
      },
      {
        "name": "key",
        "type": {
          "name": "可选属性，用于指定列表数据中可以作为唯一标识的键值，可以优化渲染性能。"
        },
        "desc": [null],
        "enum": []
      }
    ],
    "tips": [
      "`<cell-slot>` 包含自定义组件时，在 Android 上有性能问题",
      "recycle-list 是区域滚动，不会触发页面滚动，无法触发pages.json配置的下拉刷新、页面触底onReachBottomDistance、titleNView的transparent透明渐变。",
      "warning 属性的省略 - 如果没写 `switch`，无论有没有写 `case` 或 `default`，都只使用第一个模板 - 在写了 `switch` 的情况下，`case` 和 `default` 必须写一个，否则该模板将会被忽略",
      "for\n在 `<recycle-list>` 添加 for 属性即可描述如何循环展开列表的数据，语法和 Vue 的 v-for 指令类似，但是它循环的是自己内部的子节点，并不是当前节点。写法：\n- `alias in expression`\n- `(alias, index) in expression`",
      "switch\n在 `<recycle-list>` 添加 switch 属性可以用来指定数据中用于区分子模板类型的字段名，语义和编程语言里的 switch 一致，配合 `<cell-slot>` 中的 case 和 default 属性一起使用。\n如果省略了 switch 属性，则只会将第一个 `<cell-slot>` 视为模板，多余的模板将会被忽略。",
      "vm.$el",
      "vm.$refs.xxx",
      "vm.$vnode",
      "vm.#slots",
      "vm.#scopedSlots"
    ]
  },
  {
    "name": "refresh",
    "desc": ["app端nvue专用组件。"],
    "attrs": [],
    "tips": [
      "诸如 `<text>`、`<image>` 之类的任何组件，都可以放到 `<loading>` 进行渲染。",
      "特殊子组件 `<loading-indicator>`: 只能作为 `<refresh>` 和 `<loading>` 的子组件使用，拥有默认的动画效果实现。",
      "refresh 事件：当 `<scroll-view>`、`<list>`、`<waterfall>` 被下拉完成时触发。",
      "pullingdown 事件：当 `<scroll-view>`、`<list>`、`<waterfall>` 被下拉时触发。 可以从 `event` 参数对象中获取以下数据：\n- `dy`: 前后两次回调滑动距离的差值\n- `pullingDistance`: 下拉的距离\n- `viewHeight`: refresh 组件高度\n- `type`: “pullingdown” 常数字符串"
    ]
  },
  {
    "name": "rich-text",
    "desc": ["富文本。"],
    "attrs": [
      {
        "name": "nodes",
        "type": { "name": "Array / String" },
        "defaultValue": "[]",
        "desc": ["节点列表 / HTML String"],
        "since": "",
        "enum": []
      },
      {
        "name": "[space](https://developers.weixin.qq.com/miniprogram/dev/component/rich-text.html)",
        "type": { "name": "string" },
        "defaultValue": "",
        "desc": ["显示连续空格"],
        "since": "微信基础库2.4.1+、QQ小程序",
        "enum": []
      },
      {
        "name": "selectable",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["富文本是否可以长按选中，可用于复制，粘贴等场景"],
        "since": "百度小程序（真机）",
        "enum": []
      },
      {
        "name": "name",
        "type": { "name": "标签名" },
        "defaultValue": "String",
        "desc": ["是"],
        "since": "支持部分受信任的 HTML 节点",
        "enum": []
      },
      {
        "name": "attrs",
        "type": { "name": "属性" },
        "defaultValue": "Object",
        "desc": ["否"],
        "since": "支持部分受信任的属性，遵循 Pascal 命名法",
        "enum": []
      },
      {
        "name": "children",
        "type": { "name": "子节点列表" },
        "defaultValue": "Array",
        "desc": ["否"],
        "since": "结构和 nodes 一致",
        "enum": []
      },
      {
        "name": "text",
        "type": { "name": "文本" },
        "defaultValue": "String",
        "desc": ["是"],
        "since": "支持 entities",
        "enum": []
      },
      {
        "name": "",
        "type": { "name": "" },
        "defaultValue": "",
        "desc": [""],
        "since": "",
        "enum": []
      }
    ],
    "tips": [
      "app-nvue 平台 nodes 属性只支持使用 Array 类型",
      "支付宝小程序 nodes 属性只支持使用 Array 类型。",
      "nodes 不推荐使用 String 类型，性能会有所下降。",
      "rich-text 组件内屏蔽所有节点的事件。所以如果内容中有链接、图片需要点击，则不能使用rich-text，此时可在[uni-app插件市场](https://ext.dcloud.net.cn/search?q=parse)搜索parse插件使用。app-nvue的rich-text组件支持链接图片点击。",
      "attrs 属性不支持 id ，支持 class 。",
      "name 属性大小写不敏感。",
      "如果使用了不受信任的HTML节点，该节点及其所有子节点将会被移除。",
      "img 标签仅支持网络图片。",
      "如果在自定义组件中使用 rich-text 组件，那么仅自定义组件的 css 样式对 rich-text 中的 class 生效。"
    ]
  },
  {
    "name": "scroll-view",
    "desc": ["可滚动视图区域。用于区域滚动。"],
    "attrs": [
      {
        "name": "scroll-x",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["允许横向滚动"],
        "since": "",
        "enum": []
      },
      {
        "name": "scroll-y",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["允许纵向滚动"],
        "since": "",
        "enum": []
      },
      {
        "name": "upper-threshold",
        "type": { "name": "Number" },
        "defaultValue": "50",
        "desc": ["距顶部/左边多远时（单位px），触发 scrolltoupper 事件"],
        "since": "",
        "enum": []
      },
      {
        "name": "lower-threshold",
        "type": { "name": "Number" },
        "defaultValue": "50",
        "desc": ["距底部/右边多远时（单位px），触发 scrolltolower 事件"],
        "since": "",
        "enum": []
      },
      {
        "name": "scroll-top",
        "type": { "name": "Number" },
        "defaultValue": "",
        "desc": ["设置竖向滚动条位置"],
        "since": "",
        "enum": []
      },
      {
        "name": "scroll-left",
        "type": { "name": "Number" },
        "defaultValue": "",
        "desc": ["设置横向滚动条位置"],
        "since": "",
        "enum": []
      },
      {
        "name": "scroll-into-view",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "值应为某子元素id（id不能以数字开头）。设置哪个方向可滚动，则在哪个方向滚动到该元素"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "scroll-with-animation",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["在设置滚动条位置时使用动画过渡"],
        "since": "",
        "enum": []
      },
      {
        "name": "enable-back-to-top",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": [
          "iOS点击顶部状态栏、安卓双击标题栏时，滚动条返回顶部，只支持竖向"
        ],
        "since": "app-nvue，微信小程序",
        "enum": []
      },
      {
        "name": "show-scrollbar",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["控制是否出现滚动条"],
        "since": "App-nvue 2.1.5+",
        "enum": []
      },
      {
        "name": "refresher-enabled",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["开启自定义下拉刷新"],
        "since": "app-vue 2.5.12+,微信小程序基础库2.10.1+",
        "enum": []
      },
      {
        "name": "refresher-threshold",
        "type": { "name": "number" },
        "defaultValue": "45",
        "desc": ["设置自定义下拉刷新阈值"],
        "since": "app-vue 2.5.12+,微信小程序基础库2.10.1+",
        "enum": []
      },
      {
        "name": "refresher-default-style",
        "type": { "name": "string" },
        "defaultValue": "\"black\"",
        "desc": [
          "设置自定义下拉刷新默认样式，支持设置 black，white，none，none 表示不使用默认样式"
        ],
        "since": "app-vue 2.5.12+,微信小程序基础库2.10.1+",
        "enum": []
      },
      {
        "name": "refresher-background",
        "type": { "name": "string" },
        "defaultValue": "\"#FFF\"",
        "desc": ["设置自定义下拉刷新区域背景颜色"],
        "since": "app-vue 2.5.12+,微信小程序基础库2.10.1+",
        "enum": []
      },
      {
        "name": "refresher-triggered",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": [
          "设置当前下拉刷新状态，true 表示下拉刷新已经被触发，false 表示下拉刷新未被触发"
        ],
        "since": "app-vue 2.5.12+,微信小程序基础库2.10.1+",
        "enum": []
      },
      {
        "name": "enable-flex",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": [
          "启用 flexbox 布局。开启后，当前节点声明了 display: flex 就会成为 flex container，并作用于其孩子节点。"
        ],
        "since": "微信小程序 2.7.3",
        "enum": []
      },
      {
        "name": "scroll-anchoring",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": [
          "开启 scroll anchoring 特性，即控制滚动位置不随内容变化而抖动，仅在 iOS 下生效，安卓下可参考 CSS overflow-anchor 属性。"
        ],
        "since": "微信小程序 2.8.2",
        "enum": []
      },
      {
        "name": "scrolltoupper",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["滚动到顶部/左边，会触发 scrolltoupper 事件"],
        "since": "",
        "enum": []
      },
      {
        "name": "scrolltolower",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["滚动到底部/右边，会触发 scrolltolower 事件"],
        "since": "",
        "enum": []
      },
      {
        "name": "scroll",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "滚动时触发，event.detail = {scrollLeft, scrollTop, scrollHeight, scrollWidth, deltaX, deltaY}"
        ],
        "since": "&nbsp;",
        "enum": []
      },
      {
        "name": "refresherpulling",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["自定义下拉刷新控件被下拉"],
        "since": "app-vue 2.5.12+,微信小程序基础库2.10.1+",
        "enum": []
      },
      {
        "name": "refresherrefresh",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["自定义下拉刷新被触发"],
        "since": "app-vue 2.5.12+,微信小程序基础库2.10.1+",
        "enum": []
      },
      {
        "name": "refresherrestore",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["自定义下拉刷新被复位"],
        "since": "app-vue 2.5.12+,微信小程序基础库2.10.1+",
        "enum": []
      },
      {
        "name": "refresherabort",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["自定义下拉刷新被中止"],
        "since": "app-vue 2.5.12+,微信小程序基础库2.10.1+",
        "enum": []
      }
    ],
    "tips": [
      "APP-vue和小程序中，请勿在 scroll-view 中使用 map、video 等原生组件。小程序中 scroll-view 中也不要使用 canvas、textarea 原生组件。更新：微信基础库2.4.4起支持了原生组件在 scroll-view、swiper、movable-view 中的使用。app-nvue无此限制。",
      "scroll-view 不适合放长列表，有性能问题。长列表滚动和下拉刷新，应该使用原生导航栏搭配页面级的滚动和下拉刷新实现。包括在app-nvue页面，长列表应该使用list而不是scroll-view。",
      "scroll-into-view 的优先级高于 scroll-top。",
      "scroll-view是区域滚动，不会触发页面滚动，无法触发pages.json配置的下拉刷新、页面触底onReachBottomDistance、titleNView的transparent透明渐变。",
      "若要使用下拉刷新，建议使用页面的滚动，而不是 scroll-view 。插件市场有前端模拟的基于scroll-view的下拉刷新，但性能不佳。如必需使用前端下拉刷新，推荐使用基于wxs的下拉刷新，性能会比基于js监听方式更高。",
      "如果遇到scroll-top、scroll-left、refresher-triggered属性设置不生效的问题参考：[组件属性设置不生效解决办法](/vue-api?id=componentsolutions)",
      "scroll-view的滚动条设置，可通过css的-webkit-scrollbar自定义，包括隐藏滚动条。（app-nvue无此css）"
    ]
  },
  {
    "name": "slider",
    "desc": ["滑动选择器。"],
    "attrs": [
      {
        "name": "min",
        "type": { "name": "Number" },
        "defaultValue": "0",
        "desc": ["最小值"],
        "enum": []
      },
      {
        "name": "max",
        "type": { "name": "Number" },
        "defaultValue": "100",
        "desc": ["最大值"],
        "enum": []
      },
      {
        "name": "step",
        "type": { "name": "Number" },
        "defaultValue": "1",
        "desc": ["步长，取值必须大于 0，并且可被(max - min)整除"],
        "enum": []
      },
      {
        "name": "disabled",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否禁用"],
        "enum": []
      },
      {
        "name": "value",
        "type": { "name": "Number" },
        "defaultValue": "0",
        "desc": ["当前取值"],
        "enum": []
      },
      {
        "name": "activeColor",
        "type": { "name": "Color" },
        "defaultValue": "各个平台不同，详见下",
        "desc": ["滑块左侧已选择部分的线条颜色"],
        "enum": []
      },
      {
        "name": "backgroundColor",
        "type": { "name": "Color" },
        "defaultValue": "#e9e9e9",
        "desc": ["滑块右侧背景条的颜色"],
        "enum": []
      },
      {
        "name": "block-size",
        "type": { "name": "Number" },
        "defaultValue": "28",
        "desc": ["滑块的大小，取值范围为 12 - 28"],
        "enum": []
      },
      {
        "name": "block-color",
        "type": { "name": "Color" },
        "defaultValue": "#ffffff",
        "desc": ["滑块的颜色"],
        "enum": []
      },
      {
        "name": "show-value",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否显示当前 value"],
        "enum": []
      },
      {
        "name": "change",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["完成一次拖动后触发的事件，event.detail = {value: value}"],
        "enum": []
      },
      {
        "name": "changing",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["拖动过程中触发的事件，event.detail = {value: value}"],
        "enum": []
      }
    ],
    "tips": [
      "activeColor默认值在不同平台不一样，微信是绿色(#1aad19)，头条是红色，其他平台是蓝色",
      "如需要区间滑块，即一根横条上使用2个滑块选择一段范围，可见[插件市场](https://ext.dcloud.net.cn/search?q=%E5%8C%BA%E9%97%B4%E6%BB%91%E5%9D%97)",
      "2.6.3以前，在PC端使用`slider`，需配置[H5模版](https://uniapp.dcloud.io/collocation/manifest?id=h5-template)，并引入[touch-emulator.js](https://github.com/dcloudio/touchemulator)"
    ]
  },
  {
    "name": "swiper",
    "desc": ["滑块视图容器。"],
    "attrs": [
      {
        "name": "indicator-dots",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否显示面板指示点"],
        "since": "",
        "enum": []
      },
      {
        "name": "indicator-color",
        "type": { "name": "Color" },
        "defaultValue": "rgba(0, 0, 0, .3)",
        "desc": ["指示点颜色"],
        "since": "",
        "enum": []
      },
      {
        "name": "indicator-active-color",
        "type": { "name": "Color" },
        "defaultValue": "#000000",
        "desc": ["当前选中的指示点颜色"],
        "since": "",
        "enum": []
      },
      {
        "name": "active-class",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["swiper-item 可见时的 class"],
        "since": "支付宝小程序",
        "enum": []
      },
      {
        "name": "changing-class",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "acceleration 设置为 {{true}} 时且处于滑动过程中，中间若干屏处于可见时的class"
        ],
        "since": "支付宝小程序",
        "enum": []
      },
      {
        "name": "autoplay",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否自动切换"],
        "since": "",
        "enum": []
      },
      {
        "name": "current",
        "type": { "name": "Number" },
        "defaultValue": "0",
        "desc": ["当前所在滑块的 index"],
        "since": "",
        "enum": []
      },
      {
        "name": "current-item-id",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["当前所在滑块的 item-id ，不能与 current 被同时指定"],
        "since": "支付宝小程序不支持",
        "enum": []
      },
      {
        "name": "interval",
        "type": { "name": "Number" },
        "defaultValue": "5000",
        "desc": ["自动切换时间间隔"],
        "since": "",
        "enum": []
      },
      {
        "name": "duration",
        "type": { "name": "Number" },
        "defaultValue": "500",
        "desc": ["滑动动画时长"],
        "since": "app-nvue不支持",
        "enum": []
      },
      {
        "name": "circular",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否采用衔接滑动，即播放到末尾后重新回到开头"],
        "since": "",
        "enum": []
      },
      {
        "name": "vertical",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["滑动方向是否为纵向"],
        "since": "",
        "enum": []
      },
      {
        "name": "previous-margin",
        "type": { "name": "String" },
        "defaultValue": "0px",
        "desc": ["前边距，可用于露出前一项的一小部分，接受 px 和 rpx 值"],
        "since": "app-nvue、字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "next-margin",
        "type": { "name": "String" },
        "defaultValue": "0px",
        "desc": ["后边距，可用于露出后一项的一小部分，接受 px 和 rpx 值"],
        "since": "app-nvue、字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "acceleration",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["当开启时，会根据滑动速度，连续滑动多屏"],
        "since": "支付宝小程序",
        "enum": []
      },
      {
        "name": "disable-programmatic-animation",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否禁用代码变动触发 swiper 切换时使用动画。"],
        "since": "支付宝小程序",
        "enum": []
      },
      {
        "name": "display-multiple-items",
        "type": { "name": "Number" },
        "defaultValue": "1",
        "desc": ["同时显示的滑块数量"],
        "since": "app-nvue、支付宝小程序不支持",
        "enum": []
      },
      {
        "name": "skip-hidden-item-layout",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": [
          "是否跳过未显示的滑块布局，设为 true 可优化复杂情况下的滑动性能，但会丢失隐藏状态滑块的布局信息"
        ],
        "since": "App、微信小程序",
        "enum": []
      },
      {
        "name": "disable-touch",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否禁止用户 touch 操作"],
        "since": "App 2.5.5+、H5 2.5.5+、支付宝小程序、字节跳动小程序（只在初始化时有效，不能动态变更）",
        "enum": []
      },
      {
        "name": "touchable",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["是否监听用户的触摸事件，只在初始化时有效，不能动态变更"],
        "since": "字节跳动小程序（uni-app 2.5.5+ 推荐统一使用 disable-touch）",
        "enum": []
      },
      {
        "name": "easing-function",
        "type": { "name": "String" },
        "defaultValue": "default",
        "desc": [
          "指定 swiper 切换缓动动画类型，有效值：default、linear、easeInCubic、easeOutCubic、easeInOutCubic"
        ],
        "since": "微信小程序",
        "enum": []
      },
      {
        "name": "change",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "current 改变时会触发 change 事件，event.detail = {current: current, source: source}"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "transition",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "swiper-item 的位置发生改变时会触发 transition 事件，event.detail = {dx: dx, dy: dy}，支付宝小程序暂不支持dx, dy"
        ],
        "since": "App、H5、微信小程序、支付宝小程序、字节跳动小程序、QQ小程序",
        "enum": []
      },
      {
        "name": "animationfinish",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "动画结束时会触发 animationfinish 事件，event.detail = {current: current, source: source}"
        ],
        "since": "字节跳动小程序不支持",
        "enum": []
      }
    ],
    "tips": [
      "autoplay 自动播放导致swiper变化。",
      "touch 用户划动引起swiper变化。",
      "其他原因将用空字符串表示。",
      "swiper是单页组件，适合做banner图轮播和简单列表左右滑动。",
      "因为性能问题，用swiper做复杂长列表，需要较高的优化技巧以及接受一些限制。",
      "这是一个范例，[插件市场新闻模板示例](https://ext.dcloud.net.cn/plugin?id=103)，它在App端使用了nvue的原生渲染，实现高性能的左右拖动长列表；并支持可自定义的任何形式的下拉刷新。它在非App端使用的模式是只缓存左右一共3列的数据，dom中的数据过多时，它会自动释放。就是说App上，只要看过这一页，再进去时内容是还在的。而在非App上，只能做到缓存3页数据，其他页即便看过，再进去也会重新加载。并且非App的这种情况下，不再提供下拉刷新。虽然插件市场也有其他前端模拟的下拉刷新，但性能不佳。一般小程序的大厂案例里，提供左右拖长列表的，都是这种做法。",
      "如果 nvue 页面 ``@animationfinish`` 事件不能返回正确的数据，可同时监听 ``@change`` 事件。",
      "使用竖向滚动时，需要给 ``<scroll-view>`` 一个固定高度，通过 css 设置 height。",
      "注意：其中只可放置 ``<swiper-item>`` 组件，否则会导致未定义的行为。 ",
      "如果遇到current、current-item-id属性设置不生效的问题参考：[组件属性设置不生效解决办法](/vue-api?id=_4-组件属性设置不生效解决办法)",
      "banner图的切换效果和指示器的样式，有多种风格可自定义，可在[uni-app插件市场](https://ext.dcloud.net.cn/search?q=%E8%BD%AE%E6%92%AD)搜索",
      "如需banner管理后台，参考uniCloud admin banner插件：[https://ext.dcloud.net.cn/plugin?id=4117](https://ext.dcloud.net.cn/plugin?id=4117)",
      "swiper在App的vue中、百度支付宝头条QQ小程序中，不支持内嵌video、map等原生组件。在微信基础库2.4.4起和App nvue2.1.5起支持内嵌原生组件。竖向的swiper内嵌视频可实现抖音、映客等视频垂直拖动切换效果。",
      "同时监听 change transition，开始滑动时触发transition, 放开手后，在ios平台触发顺序为 transition... change，Android/微信小程序/支付宝为 transition... change transition..."
    ]
  },
  {
    "name": "switch",
    "desc": ["开关选择器。"],
    "attrs": [
      {
        "name": "checked",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否选中"],
        "since": "",
        "enum": []
      },
      {
        "name": "disabled",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否禁用"],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "type",
        "type": { "name": "String" },
        "defaultValue": "switch",
        "desc": ["样式，有效值：switch, checkbox"],
        "since": "",
        "enum": []
      },
      {
        "name": "change",
        "type": { "name": "EventHandle" },
        "defaultValue": "checked 改变时触发 change 事件，",
        "desc": ["event.detail={ value:checked}"],
        "since": "",
        "enum": []
      },
      {
        "name": "color",
        "type": { "name": "Color" },
        "defaultValue": "switch 的颜色，同 css 的 color",
        "desc": ["&nbsp;"],
        "since": "",
        "enum": []
      }
    ],
    "tips": [
      "switch的默认颜色，在不同平台不一样。微信小程序是绿色的，字节跳动小程序为红色，其他平台是蓝色的。更改颜色使用color属性。",
      "如需调节switch大小，可通过css的scale方法调节，如缩小到70%`style=\"transform:scale(0.7)\"`"
    ]
  },
  {
    "name": "text",
    "desc": ["文本组件。"],
    "attrs": [
      {
        "name": "selectable",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["文本是否可选"],
        "since": "App、H5",
        "enum": []
      },
      {
        "name": "user-select",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["文本是否可选"],
        "since": "微信小程序",
        "enum": []
      },
      {
        "name": "space",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["显示连续空格"],
        "since": "App、H5、微信小程序",
        "enum": []
      },
      {
        "name": "decode",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否解码"],
        "since": "App、H5、微信小程序",
        "enum": []
      }
    ],
    "tips": [
      "`<text>` 组件内只支持嵌套 `<text>`，不支持其它组件或自定义组件，否则会引发在不同平台的渲染差异。",
      "在app-nvue下，只有`<text>`才能包裹文本内容。无法在`<view>`组件包裹文本。",
      "decode 可以解析的有 `&nbsp;` `&lt;` `&gt;` `&amp;` `&apos;` `&ensp;` `&emsp;`。",
      "各个操作系统的空格标准并不一致。",
      "除了文本节点以外的其他节点都无法长按选中。",
      "支持 `\\n` 方式换行。",
      "如果使用 `<span>` 组件编译时会被转换为 `<text>`。"
    ]
  },
  {
    "name": "textarea",
    "desc": ["多行输入框。"],
    "attrs": [
      {
        "name": "value",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["输入框的内容"],
        "since": "",
        "enum": []
      },
      {
        "name": "placeholder",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["输入框为空时占位符"],
        "since": "",
        "enum": []
      },
      {
        "name": "placeholder-style",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["指定 placeholder 的样式"],
        "since": "",
        "enum": []
      },
      {
        "name": "placeholder-class",
        "type": { "name": "String" },
        "defaultValue": "textarea-placeholder",
        "desc": [
          "指定 placeholder 的样式类，注意页面或组件的style中写了scoped时，需要在类名前写/deep/"
        ],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "disabled",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否禁用"],
        "since": "",
        "enum": []
      },
      {
        "name": "maxlength",
        "type": { "name": "Number" },
        "defaultValue": "140",
        "desc": ["最大输入长度，设置为 -1 的时候不限制最大长度"],
        "since": "",
        "enum": []
      },
      {
        "name": "focus",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["获取焦点"],
        "since": "在 H5 平台能否聚焦以及软键盘是否跟随弹出，取决于当前浏览器本身的实现。nvue 页面不支持，需使用组件的 focus()、blur() 方法控制焦点",
        "enum": []
      },
      {
        "name": "auto-height",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否自动增高，设置auto-height时，style.height不生效"],
        "since": "",
        "enum": []
      },
      {
        "name": "fixed",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": [
          "如果 textarea 是在一个 position:fixed 的区域，需要显示指定属性 fixed 为 true"
        ],
        "since": "微信小程序、百度小程序、字节跳动小程序、QQ小程序",
        "enum": []
      },
      {
        "name": "cursor-spacing",
        "type": { "name": "Number" },
        "defaultValue": "0",
        "desc": [
          "指定光标与键盘的距离，单位 px 。取 textarea 距离底部的距离和 cursor-spacing 指定的距离的最小值作为光标与键盘的距离"
        ],
        "since": "App、微信小程序、百度小程序、字节跳动小程序、QQ小程序",
        "enum": []
      },
      {
        "name": "cursor",
        "type": { "name": "Number" },
        "defaultValue": "",
        "desc": ["指定focus时的光标位置"],
        "since": "微信小程序、App、H5、百度小程序、字节跳动小程序、QQ小程序",
        "enum": []
      },
      {
        "name": "confirm-type",
        "type": { "name": "String" },
        "defaultValue": "done",
        "desc": ["设置键盘右下角按钮的文字"],
        "since": "微信小程序基础库2.13.0+、App-vue和H5(2.9.9+，且要求设备webview内核Chrome81+、Safari13.7+)",
        "enum": [
          { "value": "send", "desc": "右下角按钮为“发送”" },
          { "value": "search", "desc": "右下角按钮为“搜索”" },
          { "value": "next", "desc": "右下角按钮为“下一个”" },
          { "value": "go", "desc": "右下角按钮为“前往”" },
          { "value": "done", "desc": "右下角按钮为“完成”" }
        ]
      },
      {
        "name": "show-confirm-bar",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["是否显示键盘上方带有”完成“按钮那一栏"],
        "since": "微信小程序、百度小程序、QQ小程序",
        "enum": []
      },
      {
        "name": "selection-start",
        "type": { "name": "Number" },
        "defaultValue": "-1",
        "desc": ["光标起始位置，自动聚焦时有效，需与selection-end搭配使用"],
        "since": "微信小程序、App、H5、百度小程序、字节跳动小程序、QQ小程序",
        "enum": []
      },
      {
        "name": "selection-end",
        "type": { "name": "Number" },
        "defaultValue": "-1",
        "desc": ["光标结束位置，自动聚焦时有效，需与selection-start搭配使用"],
        "since": "微信小程序、App、H5、百度小程序、字节跳动小程序、QQ小程序",
        "enum": []
      },
      {
        "name": "adjust-position",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["键盘弹起时，是否自动上推页面"],
        "since": "App-Android（softinputMode 为 adjustResize 时无效）、微信小程序、百度小程序、QQ小程序",
        "enum": []
      },
      {
        "name": "disable-default-padding",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["是否去掉 iOS 下的默认内边距"],
        "since": "微信小程序2.10.0",
        "enum": []
      },
      {
        "name": "hold-keyboard",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["focus时，点击页面的时候不收起键盘"],
        "since": "微信小程序2.8.2",
        "enum": []
      },
      {
        "name": "auto-blur",
        "type": { "name": "boolean" },
        "defaultValue": "false",
        "desc": ["键盘收起时，是否自动失去焦点"],
        "since": "App 3.0.0+",
        "enum": []
      },
      {
        "name": "focus",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "输入框聚焦时触发，event.detail = { value, height }，height 为键盘高度"
        ],
        "since": "仅微信小程序、App（HBuilderX 2.0+ [nvue uni-app模式](http://ask.dcloud.net.cn/article/36074)） 、QQ小程序支持 height",
        "enum": []
      },
      {
        "name": "blur",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["输入框失去焦点时触发，event.detail = {value, cursor}"],
        "since": "",
        "enum": []
      },
      {
        "name": "linechange",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "输入框行数变化时调用，event.detail = {height: 0, heightRpx: 0, lineCount: 0}"
        ],
        "since": "字节跳动小程序不支持,nvue ios暂不支持",
        "enum": []
      },
      {
        "name": "input",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "当键盘输入时，触发 input 事件，event.detail = {value, cursor}， @input 处理函数的返回值并不会反映到 textarea 上"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "confirm",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "点击完成时， 触发 confirm 事件，event.detail = {value: value}"
        ],
        "since": "微信小程序、百度小程序、QQ小程序",
        "enum": []
      },
      {
        "name": "keyboardheightchange",
        "type": { "name": "Eventhandle" },
        "defaultValue": "",
        "desc": [
          "键盘高度发生变化的时候触发此事件，event.detail = {height: height, duration: duration}"
        ],
        "since": "微信小程序基础库2.7.0+、App 3.1.0+",
        "enum": []
      }
    ],
    "tips": [
      "textarea 的 blur 事件会晚于页面上的 tap 事件，如果需要在 button 的点击事件获取 textarea，可以使用 form 的 @submit。",
      "如果遇到 value 属性设置不生效的问题参考：[组件属性设置不生效解决办法](/vue-api?id=_4-组件属性设置不生效解决办法)",
      "微信小程序、百度小程序、字节跳动小程序中，textarea是原生组件，层级高于前端组件，请勿在 scroll-view、swiper、picker-view、movable-view 中使用 textarea 组件。覆盖textarea需要使用cover-view。[详见](/component/native-component)",
      "小程序端 css 动画对 textarea 组件无效。",
      "H5 平台只能在用户交互时修改 focus 生效。",
      "如果遇到 focus 属性设置不生效的问题参考：[组件属性设置不生效解决办法](/vue-api?id=_4-组件属性设置不生效解决办法)",
      "软键盘的弹出和收起逻辑，详见[input的文档](/component/input?id=app%E5%B9%B3%E5%8F%B0ios%E7%AB%AF%E8%BD%AF%E9%94%AE%E7%9B%98%E4%B8%8A%E6%96%B9%E6%A8%AA%E6%9D%A1%E5%8E%BB%E9%99%A4%E6%96%B9%E6%A1%88)",
      "如需禁止点击其他位置收起键盘的默认行为，可以监听`touch`事件并使用`prevent`修饰符（仅支持App-v3、H5，其他平台可以通过设置`focus`来使输入框重新获取焦点），例如在确认按钮上使用：```@touchend.prevent=\"onTap\"```",
      "js中给textarea组件赋值为字符串，在字符串中加\\n可实现换行。",
      "方式一：使用uni-app自带的`editor`组件，该组件支持App、H5、微信小程序，其他家小程序自身未提供这类解决方案。",
      "方式二：采用markdown编辑器方案，输入区输入markdown语法，预览区提供预览。这种方式可以跨端。插件市场搜[富文本编辑](https://ext.dcloud.net.cn/search?q=%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91)，有不少插件。",
      "方式三：使用web-view组件，加载html页面，此时可使用web中常见的各种富文本编辑器，插件市场也有这类插件。"
    ]
  },
  {
    "name": "video",
    "desc": ["视频播放组件。"],
    "attrs": [
      {
        "name": "src",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["要播放视频的资源地址"],
        "since": "",
        "enum": []
      },
      {
        "name": "autoplay",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否自动播放"],
        "since": "",
        "enum": []
      },
      {
        "name": "loop",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否循环播放"],
        "since": "",
        "enum": []
      },
      {
        "name": "muted",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否静音播放"],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "initial-time",
        "type": { "name": "Number" },
        "defaultValue": "",
        "desc": ["指定视频初始播放位置，单位为秒（s）。"],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "duration",
        "type": { "name": "Number" },
        "defaultValue": "",
        "desc": ["指定视频时长，单位为秒（s）。"],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "controls",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["是否显示默认播放控件（播放/暂停按钮、播放进度、时间）"],
        "since": "",
        "enum": []
      },
      {
        "name": "danmu-list",
        "type": { "name": "Object Array" },
        "defaultValue": "",
        "desc": ["弹幕列表"],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "danmu-btn",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否显示弹幕按钮，只在初始化时有效，不能动态变更"],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "enable-danmu",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否展示弹幕，只在初始化时有效，不能动态变更"],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "page-gesture",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["在非全屏模式下，是否开启亮度与音量调节手势"],
        "since": "微信小程序、H5",
        "enum": []
      },
      {
        "name": "direction",
        "type": { "name": "Number" },
        "defaultValue": "",
        "desc": [
          "设置全屏时视频的方向，不指定则根据宽高比自动判断。有效值为 0（正常竖向）, 90（屏幕逆时针90度）, -90（屏幕顺时针90度）"
        ],
        "since": "H5和字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "show-progress",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["若不设置，宽度大于240时才会显示"],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "show-fullscreen-btn",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["是否显示全屏按钮"],
        "since": "",
        "enum": []
      },
      {
        "name": "show-play-btn",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["是否显示视频底部控制栏的播放按钮"],
        "since": "",
        "enum": []
      },
      {
        "name": "show-center-play-btn",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["是否显示视频中间的播放按钮"],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "show-loading",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["是否显示loading控件"],
        "since": "仅app 2.8.12+",
        "enum": []
      },
      {
        "name": "enable-progress-gesture",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["是否开启控制进度的手势"],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "object-fit",
        "type": { "name": "String" },
        "defaultValue": "contain",
        "desc": [
          "当视频大小与 video 容器大小不一致时，视频的表现形式。contain：包含，fill：填充，cover：覆盖"
        ],
        "since": "微信小程序、字节跳动小程序、H5",
        "enum": []
      },
      {
        "name": "poster",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "视频封面的图片网络资源地址，如果 controls 属性值为 false 则设置 poster 无效"
        ],
        "since": "",
        "enum": []
      },
      {
        "name": "show-mute-btn",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否显示静音按钮"],
        "since": "微信小程序",
        "enum": []
      },
      {
        "name": "title",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": ["视频的标题，全屏时在顶部展示"],
        "since": "微信小程序",
        "enum": []
      },
      {
        "name": "play-btn-position",
        "type": { "name": "String" },
        "defaultValue": "bottom",
        "desc": ["播放按钮的位置"],
        "since": "微信小程序、字节跳动小程序",
        "enum": []
      },
      {
        "name": "enable-play-gesture",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["是否开启播放手势，即双击切换播放/暂停"],
        "since": "微信小程序",
        "enum": []
      },
      {
        "name": "auto-pause-if-navigate",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["当跳转到其它小程序页面时，是否自动暂停本页面的视频"],
        "since": "微信小程序",
        "enum": []
      },
      {
        "name": "auto-pause-if-open-native",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["当跳转到其它微信原生页面时，是否自动暂停本页面的视频"],
        "since": "微信小程序",
        "enum": []
      },
      {
        "name": "vslide-gesture",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": [
          "在非全屏模式下，是否开启亮度与音量调节手势（同 page-gesture）"
        ],
        "since": "微信小程序",
        "enum": []
      },
      {
        "name": "vslide-gesture-in-fullscreen",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": ["在全屏模式下，是否开启亮度与音量调节手势"],
        "since": "微信小程序",
        "enum": []
      },
      {
        "name": "ad-unit-id",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "视频前贴广告单元ID，更多详情可参考开放能力[视频前贴广告](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/ad/video-patch-ad.html)"
        ],
        "since": "微信小程序",
        "enum": []
      },
      {
        "name": "poster-for-crawler",
        "type": { "name": "String" },
        "defaultValue": "",
        "desc": [
          "用于给搜索等场景作为视频封面展示，建议使用无播放 icon 的视频封面图，只支持网络地址"
        ],
        "since": "微信小程序",
        "enum": []
      },
      {
        "name": "codec",
        "type": { "name": "String" },
        "defaultValue": "hardware",
        "desc": [
          "解码器选择，hardware：硬解码（硬解码可以增加解码算力，提高视频清晰度。少部分老旧硬件可能存在兼容性问题）；software：ffmpeg 软解码；"
        ],
        "since": "App-Android 3.1.0+",
        "enum": []
      },
      {
        "name": "http-cache",
        "type": { "name": "Boolean" },
        "defaultValue": "true",
        "desc": [
          "是否对 http、https 视频源开启本地缓存。缓存策略:开启了此开关的视频源，在视频播放时会在本地保存缓存文件，如果本地缓存池已超过100M，在进行缓存前会清空之前的缓存（不适用于m3u8等流媒体协议）"
        ],
        "since": "App-Android 3.1.0+",
        "enum": []
      },
      {
        "name": "play-strategy",
        "type": { "name": "Number" },
        "defaultValue": "0",
        "desc": [
          "播放策略，0：普通模式，适合绝大部分视频播放场景；1：平滑播放模式（降级），增加缓冲区大小，采用open sl解码音频，避免音视频脱轨的问题，可能会降低首屏展现速度、视频帧率，出现开屏音频延迟等。 适用于高码率视频的极端场景；3： M3U8优化模式，增加缓冲区大小，提升视频加载速度和流畅度，可能会降低首屏展现速度。 适用于M3U8在线播放的场景"
        ],
        "since": "App-Android 3.1.0+",
        "enum": []
      },
      {
        "name": "header",
        "type": { "name": "Object" },
        "defaultValue": "",
        "desc": ["HTTP 请求 Header"],
        "since": "App 3.1.19+",
        "enum": []
      },
      {
        "name": "play",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["当开始/继续播放时触发play事件"],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "pause",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["当暂停播放时触发 pause 事件"],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "ended",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["当播放到末尾时触发 ended 事件"],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "timeupdate",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "播放进度变化时触发，event.detail = {currentTime, duration} 。触发频率 250ms 一次"
        ],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "fullscreenchange",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "当视频进入和退出全屏时触发，event.detail = {fullScreen, direction}，direction取为 vertical 或 horizontal"
        ],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "waiting",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["视频出现缓冲时触发"],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "error",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["视频播放出错时触发"],
        "since": "字节跳动小程序不支持",
        "enum": []
      },
      {
        "name": "progress",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "加载进度变化时触发，只支持一段加载。event.detail = {buffered}，百分比"
        ],
        "since": "微信小程序、H5",
        "enum": []
      },
      {
        "name": "loadedmetadata",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "视频元数据加载完成时触发。event.detail = {width, height, duration}"
        ],
        "since": "微信小程序、H5",
        "enum": []
      },
      {
        "name": "fullscreenclick",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": [
          "视频播放全屏播放时点击事件。event.detail = { screenX:\"Number类型，点击点相对于屏幕左侧边缘的 X 轴坐标\", screenY:\"Number类型，点击点相对于屏幕顶部边缘的 Y 轴坐标\", screenWidth:\"Number类型，屏幕总宽度\", screenHeight:\"Number类型，屏幕总高度\"}"
        ],
        "since": "App 2.6.3+",
        "enum": []
      },
      {
        "name": "controlstoggle",
        "type": { "name": "EventHandle" },
        "defaultValue": "",
        "desc": ["切换 controls 显示隐藏时触发。event.detail = {show}"],
        "since": "微信小程序2.9.5",
        "enum": []
      }
    ],
    "tips": [
      "视频播放格式说明：\n  * H5平台：支持的视频格式视浏览器而定，一般通用的都支持：mp4、webm 和 ogg。（``<video/>`` 组件编译到 H5 时会替换为标准 html 的 video 标签）。H5端也可以自行在条件编译里使用video.js等三方库，这些库可以自动判断环境兼容以决定使用标准video或flash来播放。\n  * 小程序平台：各小程序平台支持程度不同，详见各家文档：[微信小程序视频组件文档](https://developers.weixin.qq.com/miniprogram/dev/component/video.html)、[支付宝小程序video组件](https://docs.alipay.com/mini/component/video)、[百度小程序视频组件文档](https://smartprogram.baidu.com/docs/develop/component/media/#video/)、[字节跳动小程序视频组件文档](https://developer.toutiao.com/dev/cn/mini-app/develop/component/media-component/video)、[QQ小程序视频组件文档](https://q.qq.com/wiki/develop/miniprogram/component/media/camera.html)、[华为快应用视频组件文档](https://developer.huawei.com/consumer/cn/doc/development/quickApp-References/webview-component-video)\n  * App平台： 支持本地视频(mp4/flv)、网络视频地址（mp4/flv/m3u8）及流媒体（rtmp/hls/rtsp）。",
      "video**全屏**后，如何自行绘制界面？比如加个标题、加个分享按钮\n  * 微信基础库 2.4.0 以上可通过cover-view来绘制界面覆盖元素\n  * app端 2.1.5 以上nvue页面的video也可以通过cover-view来绘制界面覆盖元素\n  * H5端可通过通用h5做法实现\n  * 其他端无法全屏后自行绘制内容",
      "如何实现抖音、映客等全屏视频垂直滑动切换效果？\n  * 微信基础库 2.4.0 和 app端nvue 2.1.5 以上，可通过在垂直的swiper中内嵌video来实现。原生导航栏设置为custom，视频长宽设为手机屏幕大小，通过cover-view覆盖视频内容。插件市场有相关[示例](https://ext.dcloud.net.cn/search?q=%E6%8A%96%E9%9F%B3)",
      "`<video/>` 组件在非H5端是原生组件，层级高于普通前端组件，覆盖其需要使用[cover-view](https://uniapp.dcloud.io/component/cover-view?id=cover-view)组件或plus.nativeObj.view、subNVue。微信基础库 2.4.0+和字节跳动小程序 已支持 video 组件的同层渲染，也就是video在非全屏时，可以被前端元素通过调节z-index来遮挡，但video全屏时，仍需要cover-view覆盖。",
      "除微信基础库 2.4.0+ 和 字节跳动小程序 和 app-nvue 2.1.5+，其他情况下非H5的video不能放入scroll-view和swiper。注意参考 [原生组件使用限制](/component/native-component)。",
      "你也可以尝试换个设计思路，如：列表中的视频组件是通过图片与icon模拟的，点击后播放全屏播放视频的方案。详情[【video组件会覆盖页面其他非原生组件的设计替代方案示例】](https://ext.dcloud.net.cn/plugin?id=3549)",
      "App平台：使用 `<video/>` 组件，打包 App 时必须勾选 manifest.json->App 模块权限配置->VideoPlayer 模块。此模块体积较大，非默认内置。",
      "App平台：如果使用的视频路径为本地路径，需要配置资源为释放模式：在 manifest.json 文件内 app-plus 节点下新增 runmode 配置，设置值为liberate。",
      "App平台：如果想使用非原生的video，即原来普通的html5自带video，可使用web-view组件load html页面，在其中使用普通h5 video。",
      "App平台：app-vue即使选择了使用x5内核，也不会使用x5的video播放，仍然使用uni-app的App引擎自带的原生视频播放。",
      "H5平台： 在部分浏览器中会强制调用原生播放器播放（如：微信内置浏览器、UC浏览器等），在 x5 内核的浏览器中支持配置[同层播放器](https://x5.tencent.com/docs/video.html)。",
      "HBuilderX内置浏览器，使用video标签暂时存在问题，请先使用其他外部浏览器。"
    ]
  },
  {
    "name": "view",
    "desc": ["视图容器。"],
    "attrs": [
      {
        "name": "hover-class",
        "type": { "name": "String" },
        "defaultValue": "none",
        "desc": [
          "指定按下去的样式类。当 hover-class=\"none\" 时，没有点击态效果"
        ],
        "enum": []
      },
      {
        "name": "hover-stop-propagation",
        "type": { "name": "Boolean" },
        "defaultValue": "false",
        "desc": ["指定是否阻止本节点的祖先节点出现点击态"],
        "enum": []
      },
      {
        "name": "hover-start-time",
        "type": { "name": "Number" },
        "defaultValue": "50",
        "desc": ["按住后多久出现点击态，单位毫秒"],
        "enum": []
      },
      {
        "name": "hover-stay-time",
        "type": { "name": "Number" },
        "defaultValue": "400",
        "desc": ["手指松开后点击态保留时间，单位毫秒"],
        "enum": []
      }
    ],
    "tips": ["如果使用 `<div>` ，编译时会被转换为 `<view>`。"]
  },
  {
    "name": "waterfall",
    "desc": ["app端nvue专用组件。"],
    "attrs": [],
    "tips": [
      "`<cell>`：用于定义列表中的子列表项，类似于 HTML 中的 ul 之于 li。`<waterfall>` 会对 `<cell>` 进行高效的内存回收以达到更好的性能。",
      "`<header>`：当 `<header>` 到达屏幕顶部时，吸附在屏幕顶部。",
      "`<refresh>`：用于给列表添加下拉刷新的功能。",
      "`<loading>`：`<loading>` 用法与特性和 `<refresh>` 类似，用于给列表添加上拉加载更多的功能。\n<img src=\"https://bjetxgzv.cdn.bspapp.com/VKCEYUGU-uni-app-doc/e6b5dbe0-4f2e-11eb-97b7-0dc4655d6e68.png\" />",
      "show-scrollbar : `[可选]` 可选值为 true/ false，默认值为 true。控制是否出现滚动条。",
      "column-count: `[可选]`描述瀑布流的列数\n- auto: 意味着列数是被其他属性所决定的(比如 column-width)\n- `<integer>`: 最佳列数，column-width 和 column-count 都指定非0值， 则 column-count 代表最大列数。",
      "column-width : `[可选]`描述瀑布流每一列的列宽\n- `auto`: 意味着列宽是被其他属性所决定的(比如 column-count)\n- `<length>`: 最佳列宽，实际的列宽可能会更宽(需要填充剩余的空间)， 或者更窄(如果剩余空间比列宽还要小)。 该值必须大于0",
      "column-gap: [可选]列与列的间隙. 如果指定了 `normal` ，则对应 32.",
      "left-gap: [可选]左边cell和列表的间隙. 如果未指定 ，则对应 `0`",
      "right-gap: [可选]右边cell和列表的间隙. 如果未指定，则对应 `0`\n<img src=\"https://bjetxgzv.cdn.bspapp.com/VKCEYUGU-uni-app-doc/e78b5450-4f2e-11eb-b680-7980c8a877b8.png\" />",
      "click：用于监听点击事件。（例如：一般绑定于子组件之上触发跳转）。",
      "longpress：用于监听长按事件（一般绑定于子组件之上例如：长按可删除）。",
      "appear：用于监听子组件出现事件（一般绑定于子组件之上例如：监听最后一个元素出现，加载新的数据）",
      "disappear：用于监听子组件滑出屏幕事件（一般绑定于子组件之上）",
      "waterfall是区域滚动，不会触发页面滚动，无法触发pages.json配置的下拉刷新、页面触底onReachBottomDistance、titleNView的transparent透明渐变。"
    ]
  },
  {
    "name": "web-view",
    "desc": [
      "`web-view` 是一个 web 浏览器组件，可以用来承载网页的容器，会自动铺满整个页面（nvue 使用需要手动指定宽高）。"
    ],
    "attrs": [
      {
        "name": "src",
        "type": { "name": "String" },
        "defaultValue": "webview 指向网页的链接",
        "desc": ["&nbsp;"],
        "enum": []
      },
      {
        "name": "allow",
        "type": { "name": "String" },
        "defaultValue": "用于为 [iframe](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/iframe) 指定其[特征策略](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/策略特征)",
        "desc": ["H5"],
        "enum": []
      },
      {
        "name": "sandbox",
        "type": { "name": "String" },
        "defaultValue": "该属性对呈现在 [iframe](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/iframe) 框架中的内容启用一些额外的限制条件。",
        "desc": ["H5"],
        "enum": []
      },
      {
        "name": "webview-styles",
        "type": { "name": "Object" },
        "defaultValue": "webview 的样式",
        "desc": ["App-vue"],
        "enum": []
      },
      {
        "name": "message",
        "type": { "name": "EventHandler" },
        "defaultValue": "网页向应用 `postMessage` 时，会在特定时机（后退、组件销毁、分享）触发并收到消息。",
        "desc": [
          "H5 暂不支持（可以直接使用 [window.postMessage](https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage)）"
        ],
        "enum": []
      },
      {
        "name": "onPostMessage",
        "type": { "name": "EventHandler" },
        "defaultValue": "网页向应用实时 `postMessage`",
        "desc": ["App-nvue"],
        "enum": []
      },
      {
        "name": "progress",
        "type": { "name": "Object/Boolean" },
        "defaultValue": "进度条样式。仅加载网络 HTML 时生效，设置为 `false` 时禁用进度条。",
        "desc": [null],
        "enum": []
      },
      {
        "name": "color",
        "type": { "name": "String" },
        "defaultValue": "#00FF00",
        "desc": ["进度条颜色"],
        "enum": []
      },
      {
        "name": "plus",
        "type": { "name": "Boolean" },
        "defaultValue": "App",
        "desc": [null],
        "enum": []
      },
      {
        "name": "miniprogram",
        "type": { "name": "Boolean" },
        "defaultValue": "微信小程序",
        "desc": [null],
        "enum": []
      },
      {
        "name": "smartprogram",
        "type": { "name": "Boolean" },
        "defaultValue": "百度小程序",
        "desc": [null],
        "enum": []
      },
      {
        "name": "miniprogram",
        "type": { "name": "Boolean" },
        "defaultValue": "支付宝小程序",
        "desc": [null],
        "enum": []
      }
    ],
    "tips": [
      "小程序仅支持加载网络网页，不支持本地html",
      "补充说明：app-vue下web-view组件不支持自定义样式，而v-show的本质是改变组件的样式。即组件支持v-if而不是支持v-show。",
      "小程序端 web-view 组件一定有原生导航栏，下面一定是全屏的 web-view 组件，navigationStyle: custom 对 web-view 组件无效。",
      "App 端使用 `自定义组件模式` 时，uni.web-view.js 的最低版为 [uni.webview.1.5.2.js](https://js.cdn.aliyun.dcloud.net.cn/dev/uni-app/uni.webview.1.5.2.js)",
      "App 平台同时支持网络网页和本地网页，但本地网页及相关资源（js、css等文件）必须放在 `uni-app 项目根目录->hybrid->html` 文件夹下或者 `static` 目录下，如下为一个加载本地网页的`uni-app`项目文件目录示例：",
      "nvue `web-view` 必须指定样式宽高",
      "V3 编译模式，网页向应用 `postMessage` 为实时消息",
      "app-nvue `web-view` 默认没有大小，可以通过样式设置大小，如果想充满整个窗口，设置 `flex: 1` 即可，标题栏不会自动显示 `web-view` 页面中的 title。如果想充满整个窗口且想要显示标题推荐使用 vue 页面的 `web-view`(默认充满屏幕不可控制大小), 想自定义 `web-view` 大小使用 nvue `web-view`",
      "传递的消息信息，必须写在 data 对象中。",
      "`event.detail.data` 中的数据，以数组的形式接收每次 post 的消息。",
      "比较简单的方式是actionsheet等原生弹出菜单（小程序也可以使用此方案）",
      "使用plus.nativeObj.view。这里有一个底部图标菜单的示例，可参考[https://ext.dcloud.net.cn/plugin?id=69](https://ext.dcloud.net.cn/plugin?id=69)",
      "使用[原生子窗体subNvue](/api/window/subNVues)",
      "可以在web-view组件内嵌的网页中弹出z-index更高的div。如果是外部网页，可以在vue中获得子webview对象后，通过[evalJS](https://www.html5plus.org/doc/zh_cn/webview.html#plus.webview.WebviewObject.evalJS)为这个子webview注入一段js，操作其弹出div层。",
      "H5端的web-view其实是被转为iframe运行，使用的是当前的浏览器",
      "小程序的web-view使用的是小程序自带的浏览器内核，不同厂商不一样，[详见](https://ask.dcloud.net.cn/article/1318)",
      "App端，Android，默认使用的是os自带的浏览器内核，在设置-所有应用里，显示系统服务，可查看Android System Webview的版本。在Android5+，系统webview支持安装升级。",
      "App端，Android，支持在manifest中配置选用腾讯X5浏览器内核。使用x5内核需要一些注意事项！具体请参考[详见](https://ask.dcloud.net.cn/article/36806)",
      "App端，iOS，是分为UIWebview和WKWebview的，2.2.5+起默认为WKWebview，之前版本[详见](https://ask.dcloud.net.cn/article/36348)",
      "`<web-view>` 组件默认铺满全屏并且层级高于前端组件。App端想调节大小或再其上覆盖内容需使用plus规范。",
      "`<web-view>` 组件所在窗口的标题，跟随页面的 `<title>` 值的变化而变化（不含H5端）。",
      "App-vue的`web-view`加载的html页面可以运行plus的api，但注意如果该页面调用了plus.key的API监听了back按键（或使用mui的封装），会造成back监听冲突。需要该html页面移除对back的监听。或按照上面的示例代码禁止网页使用plus对象。app-nvue页面的`web-view`组件不能运行plus API。",
      "`uni.webview.js` 最新版地址：[https://js.cdn.aliyun.dcloud.net.cn/dev/uni-app/uni.webview.1.5.2.js](https://js.cdn.aliyun.dcloud.net.cn/dev/uni-app/uni.webview.1.5.2.js)",
      "小程序平台，个人类型与海外类型的小程序使用 `web-view` 组件，提交审核时注意微信等平台是否允许使用",
      "小程序平台， `src` 指向的链接需登录小程序管理后台配置域名白名单。`App`和`H5` 无此限制。"
    ]
  }
]
